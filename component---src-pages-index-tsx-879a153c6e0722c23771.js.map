{"version":3,"file":"component---src-pages-index-tsx-879a153c6e0722c23771.js","mappings":"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","sources":["webpack://laniewski-me/./src/components/PostExcerpt/index.module.scss","webpack://laniewski-me/./src/components/PostExcerpt/index.tsx","webpack://laniewski-me/./src/components/Heading/index.module.scss","webpack://laniewski-me/./src/components/Heading/index.tsx","webpack://laniewski-me/./src/components/Hero/index.tsx","webpack://laniewski-me/./src/components/Hero/index.module.scss","webpack://laniewski-me/./src/components/Keyword/index.tsx","webpack://laniewski-me/./src/components/Keyword/index.module.scss","webpack://laniewski-me/./src/components/Repository/index.tsx","webpack://laniewski-me/./src/components/Repository/index.module.scss","webpack://laniewski-me/./src/pages/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var postExcerpt__title = \"index-module--post-excerpt__title---R0AJ\";\nexport var postExcerpt__wrapper = \"index-module--post-excerpt__wrapper--5cYKe\";\nexport var postExcerpt__content = \"index-module--post-excerpt__content--eEd-L\";\nexport var postExcerpt__date = \"index-module--post-excerpt__date--7Ztjd\";","import * as css from \"./index.module.scss\";\n\nimport { Link } from \"gatsby\";\n\ninterface Props {\n  link: string;\n  title: string;\n  date: string;\n  content: string;\n  language: string;\n  authors?: string[];\n}\n\nexport function PostExcerpt({\n  link,\n  title,\n  date,\n  authors,\n  content,\n  language,\n}: Props) {\n  return (\n    <article\n      itemScope\n      itemType=\"http://schema.org/Article\"\n      className={css.postExcerpt__wrapper}\n      lang={language}\n    >\n      <header>\n        <time\n          className={css.postExcerpt__date}\n          dateTime={date}\n          itemProp=\"datePublished\"\n        >\n          {date}\n        </time>\n\n        <h2 className={css.postExcerpt__title}>\n          <Link to={link} itemProp=\"url\" rel=\"bookmark\">\n            <span itemProp=\"headline\">{title}</span>\n          </Link>\n        </h2>\n\n        {authors?.length ? (\n          <ul className=\"visually-hidden\">\n            {authors.map((author) => (\n              <li key={author}>\n                <p itemProp=\"author\">{author}</p>\n              </li>\n            ))}\n          </ul>\n        ) : null}\n      </header>\n\n      <p\n        dangerouslySetInnerHTML={{ __html: content }}\n        itemProp=\"description\"\n        className={css.postExcerpt__content}\n      />\n    </article>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var heading__wrapper = \"index-module--heading__wrapper--MoMom\";\nexport var heading__text = \"index-module--heading__text--7fYiM\";\nexport var heading__textH2 = \"index-module--heading__text--h2--37Rxf\";\nexport var heading__textH3 = \"index-module--heading__text--h3--soBei\";","import * as css from \"./index.module.scss\";\n\nimport * as React from \"react\";\n\ntype HeaderProps = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLElement>,\n  HTMLElement\n>;\n\ntype HeadingProps = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLHeadingElement>,\n  HTMLHeadingElement\n>;\n\nexport function Heading({\n  children,\n  ...props\n}: React.PropsWithChildren<HeaderProps>) {\n  return (\n    <header className={css.heading__wrapper} {...props}>\n      {children}\n    </header>\n  );\n}\n\nHeading.H1 = function H1({\n  children,\n  ...props\n}: React.PropsWithChildren<HeadingProps>) {\n  return (\n    <h1 className={`${css.heading__text}`} {...props}>\n      {children}\n    </h1>\n  );\n};\n\nHeading.H2 = function H2({\n  children,\n  ...props\n}: React.PropsWithChildren<HeadingProps>) {\n  return (\n    <h2 className={`${css.heading__text} ${css.heading__textH2}`} {...props}>\n      {children}\n    </h2>\n  );\n};\n\nHeading.H3 = function H3({\n  children,\n  ...props\n}: React.PropsWithChildren<HeadingProps>) {\n  return (\n    <h3 className={`${css.heading__text} ${css.heading__textH3}`} {...props}>\n      {children}\n    </h3>\n  );\n};\n\nHeading.H4 = function H4({\n  children,\n  ...props\n}: React.PropsWithChildren<HeadingProps>) {\n  return (\n    <h4 className={`${css.heading__text}`} {...props}>\n      {children}\n    </h4>\n  );\n};\n\nHeading.H5 = function H5({\n  children,\n  ...props\n}: React.PropsWithChildren<HeadingProps>) {\n  return (\n    <h5 className={`${css.heading__text}`} {...props}>\n      {children}\n    </h5>\n  );\n};\n\nHeading.H6 = function H6({\n  children,\n  ...props\n}: React.PropsWithChildren<HeadingProps>) {\n  return (\n    <h6 className={`${css.heading__text}`} {...props}>\n      {children}\n    </h6>\n  );\n};\n","import * as css from \"./index.module.scss\";\n\nexport function calculateAge(birthday: Date) {\n  const ageDiff = Date.now() - birthday.getTime();\n  const ageDate = new Date(ageDiff);\n\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\n}\n\nexport function Hero() {\n  const age = calculateAge(new Date(\"01/01/1998\"));\n\n  return (\n    <article className={css.hero}>\n      <div className={css.hero__wrapper}>\n        <header>\n          <h1 className={css.hero__title}>\n            Bartosz\n            <br /> ≈Åaniewski\n          </h1>\n\n          <h2 className={css.hero__subtitle}>\n            Developer & Designer<span>, {age} years old,</span> from Poland\n          </h2>\n        </header>\n      </div>\n    </article>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var hero = \"index-module--hero--XvzmV\";\nexport var hero__wrapper = \"index-module--hero__wrapper--GiSG-\";\nexport var hero__title = \"index-module--hero__title--3Ox0E\";\nexport var hero__subtitle = \"index-module--hero__subtitle--zaaas\";","import * as css from \"./index.module.scss\";\n\ninterface Props {\n  children: string;\n}\n\nexport function Keyword({ children }: Props) {\n  return (\n    <strong className={css.keyword} title={`Topic: ${children}`}>\n      {children}\n    </strong>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var keyword = \"index-module--keyword--Pq2tX\";","import * as css from \"./index.module.scss\";\n\nimport * as React from \"react\";\n\nimport { Keyword } from \"../Keyword\";\n\ninterface Props {\n  as?: string | React.ComponentType<unknown>;\n  link: string;\n  name: string;\n  description: string;\n  keywords: string[];\n}\n\nexport function Repository({\n  link,\n  name,\n  description,\n  keywords,\n  as = \"article\",\n}: Props) {\n  const Wrapper = (\n    props: React.DetailedHTMLProps<\n      React.HTMLAttributes<HTMLElement>,\n      HTMLElement\n    >\n  ) => React.createElement(as, props);\n\n  return (\n    <Wrapper\n      data-repo-name={name}\n      itemType=\"http://schema.org/SoftwareSourceCode\"\n      itemScope\n    >\n      <link itemProp=\"codeRepository\" href={link} />\n      <link itemProp=\"downloadUrl\" href={`${link}/releases`} />\n\n      <a\n        className={css.repository__link}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={link}\n        aria-label={description}\n      >\n        <h4 className={css.repository__name} itemProp=\"name\">\n          {name}\n        </h4>\n\n        <p className={css.repository__description} itemProp=\"about\">\n          {description}\n        </p>\n\n        <aside itemProp=\"keywords\">\n          {keywords.map((keyword) => (\n            <Keyword key={keyword}>{keyword}</Keyword>\n          ))}\n        </aside>\n      </a>\n    </Wrapper>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var repository__link = \"index-module--repository__link--gk8Z7\";\nexport var repository__name = \"index-module--repository__name--0XZOg\";\nexport var repository__description = \"index-module--repository__description--GacGk\";","import \"../styles/pages/index.scss\";\n\nimport { graphql } from \"gatsby\";\n\nimport { IndexPageQuery } from \"../../graphql-types\";\n\nimport { Content } from \"../components/Content\";\nimport { Heading } from \"../components/Heading\";\nimport { Hero } from \"../components/Hero\";\nimport { Layout } from \"../components/Layout\";\nimport { PostExcerpt } from \"../components/PostExcerpt\";\nimport { Repository } from \"../components/Repository\";\nimport { SEO } from \"../components/SEO\";\n\ninterface Props {\n  data: IndexPageQuery;\n}\n\nexport default function IndexPage({ data }: Props) {\n  const posts = data.allMdx.nodes;\n  const repositories = data.allRepositoriesYaml.nodes;\n\n  return (\n    <Layout>\n      <SEO />\n\n      <Hero />\n\n      <Content>\n        <article>\n          <Heading>\n            <Heading.H2>Open-source projects</Heading.H2>\n            <Heading.H3>\n              Community is essential to me. I want to become the kind of\n              developer that I would want to work with. That is why I share my\n              knowledge, code, and time with others.\n            </Heading.H3>\n          </Heading>\n\n          <ol className=\"repositories list\">\n            {repositories.map((repository) => (\n              <Repository\n                as=\"li\"\n                key={repository.id}\n                link={repository.path}\n                name={repository.name}\n                description={repository.desc}\n                keywords={repository.keywords}\n              />\n            ))}\n          </ol>\n        </article>\n\n        <article>\n          <Heading>\n            <Heading.H2>Newest articles</Heading.H2>\n            <Heading.H3>\n              I write articles about web development, mostly React, Vue, best\n              practices, accessibility and JS related stuff.\n            </Heading.H3>\n          </Heading>\n\n          <ol className=\"list\">\n            {posts.map((post) => (\n              <li key={post.fields.slug}>\n                <PostExcerpt\n                  link={post.fields.slug}\n                  title={post.frontmatter.title || post.fields.slug}\n                  date={post.frontmatter.date}\n                  authors={post.frontmatter.authors}\n                  content={post.frontmatter.description || post.excerpt}\n                  language={post.frontmatter.language}\n                />\n              </li>\n            ))}\n          </ol>\n        </article>\n      </Content>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query IndexPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(limit: 3, sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          authors\n          language\n          description\n        }\n      }\n    }\n    allRepositoriesYaml {\n      nodes {\n        id\n        name\n        desc\n        path\n        keywords\n      }\n    }\n  }\n`;\n"],"names":["PostExcerpt","link","title","date","authors","content","language","itemScope","itemType","className","lang","dateTime","itemProp","to","rel","length","map","author","dangerouslySetInnerHTML","__html","heading__text","Heading","children","props","H1","css","H2","H3","H4","H5","H6","Hero","birthday","ageDiff","ageDate","age","Date","now","getTime","Math","abs","getUTCFullYear","Keyword","Repository","name","description","keywords","as","Wrapper","React","href","target","keyword","IndexPage","data","posts","allMdx","nodes","repositories","allRepositoriesYaml","Layout","SEO","Content","repository","path","desc","id","post","fields","slug","frontmatter","excerpt"],"sourceRoot":""}