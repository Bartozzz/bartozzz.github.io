{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-content-blog-2019-03-01-enterprise-scale-react-redux-project-architecture-index-md-1b114795749ca16561e1.js","mappings":"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","sources":["webpack://laniewski-me/./content/blog/2019-03-01-enterprise-scale-react-redux-project-architecture/index.md","webpack://laniewski-me/./src/templates/blog-post.tsx","webpack://laniewski-me/./src/components/Alert/index.module.scss","webpack://laniewski-me/./src/components/Alert/index.tsx","webpack://laniewski-me/./src/components/Discussion/index.tsx","webpack://laniewski-me/./node_modules/@matejmazur/react-katex/dist/react-katex.m.js","webpack://laniewski-me/./src/components/Formula/index.tsx","webpack://laniewski-me/./src/components/TableOfContents/index.module.scss","webpack://laniewski-me/./src/components/TableOfContents/index.tsx","webpack://laniewski-me/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    strong: \"strong\",\n    h2: \"h2\",\n    span: \"span\",\n    h3: \"h3\",\n    code: \"code\",\n    h4: \"h4\",\n    blockquote: \"blockquote\",\n    h5: \"h5\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Maintaining large React projects can be a difficult task. Below are a few practices I’ve adapted over the years working with React projects of all scales. A low of those practices were directly taken or inspired by excellent resources found in the React/Redux community, precisely:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://reactjs.org\",\n          children: \"React: official documentation\"\n        }), \";\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://redux.js.org/\",\n          children: \"Redux: official documentation\"\n        }), \";\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://github.com/erikras/ducks-modular-redux\",\n          children: \"Ducks: Redux Reducer Bundles\"\n        }), \";\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://github.com/alexnm/re-ducks\",\n          children: \"Re-ducks: Building on the duck legacy\"\n        }), \";\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://github.com/piotrwitek/react-redux-typescript-guide\",\n          children: \"React & Redux TypeScript guide\"\n        }), \";\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"The proposed architecture is not meant to be enforced dogmatically and is a work in progress that might change over time.\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"file-structure\",\n      children: \"File structure\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Dan Abramov created a \", _jsx(_components.a, {\n        href: \"http://react-file-structure.surge.sh/\",\n        children: \"guide\"\n      }), \" for organising files and he got a very good point. For months I’ve been following the “good” ways to organise React projects: starting at the separation of concerns with Presentational and Container components, finishing at adapting \", _jsx(_components.a, {\n        href: \"https://github.com/erikras/ducks-modular-redux\",\n        children: \"ducks\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It worked well for small projects, but as they grew to be 30 different, unique screens and over 200 components, it  became more difficult to maintain all of this together. At Milo, we came with a directory structure that is inspired by Django and best-practices from React, taking the separation of concerns to its extreme.\"\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">src/\\n├── App.tsx\\n├── index.ts\\n├── store.ts\\n├── types.ts\\n├── shared/\\n│    └── ComponentName.tsx\\n├── modules/\\n│    └── &lt;moduleName>/\\n│          ├── components/\\n│          │     └── ComponentName.tsx\\n│          ├── actionCreators.ts\\n│          ├── actionTypes.ts\\n│          ├── apiCalls.ts\\n│          ├── operations.ts\\n│          ├── selectors.ts\\n│          ├── reducers.ts\\n│          ├── utils.ts\\n│          ├── types.ts\\n│          └── index.ts\\n└── screens/\\n      ├── &lt;screenNamespace>/\\n      │     ├── SubcreenNameA.tsx\\n      │     └── SubcreenNameB.tsx\\n      └── Navigation.ts</code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"shared\",\n      children: \"Shared\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This contains the shared code used all across your app. It can include configuration files, primary presentational components (i.e. Buttons, Inputs, Grid, …) helpers to work with the API and pretty much everything that doesn’t fit in other parts of the proposed architecture.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"screens\",\n      children: \"Screens\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Screens are components which are directly mounted on routes (\", _jsx(_components.a, {\n        href: \"https://github.com/ReactTraining/react-router\",\n        children: _jsx(_components.code, {\n          children: \"react-router\"\n        })\n      }), \", \", _jsx(_components.a, {\n        href: \"https://github.com/react-navigation/react-navigation\",\n        children: _jsx(_components.code, {\n          children: \"react-navigation\"\n        })\n      }), \"). They render shared and/or modules’ components.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"modules\",\n      children: \"Modules\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Sometimes, we need to share the logic between web (React) and mobile (React Native) apps. The proposed structure makes it very easy to reuse and maintain the code without influencing other app parts.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The main idea of \", _jsx(_components.code, {\n        children: \"modules/\"\n      }), \" is to group together a strongly coupled part of the application and make it as reusable as possible. It contains all the required components (later used in screens) as well as reducers, action creators and other state-related utilities.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"A module must contain the entire logic for handling its concept;\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"A module may contain all the required components to present its concept.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"components\",\n      children: \"Components\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We don’t always follow the concept of a container and presentational components – the promoted thing with this concept is the separation of concerns which can be achieved in different, more maintainable ways, for example though the Hooks API. Do what is more suitable for your case.\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"“I don’t suggest splitting your components like this anymore. If you find it natural in your codebase, this pattern can be handy. But I’ve seen it enforced without any necessity and with almost dogmatic fervor far too many times. The main reason I found it useful was because it let me separate complex stateful logic from other aspects of the component. Hooks let me do the same thing without an arbitrary division.” – \", _jsx(_components.a, {\n          href: \"https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0\",\n          children: \"Dan Abramov\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"index\",\n      children: \"Index\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"index.ts\"\n      }), \" file should expose the public API of a module. Everything that is not exposed in this file should be considered private and never accessed from the outside.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"The default export must be the reducer.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"It must exports \", _jsx(_components.code, {\n          children: \"actions\"\n        }), \", \", _jsx(_components.code, {\n          children: \"operations\"\n        }), \", \", _jsx(_components.code, {\n          children: \"selectors\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"types\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"It must expose all the components.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> actions <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./actionCreators\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> operations <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./operations\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> selectors <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./selectors\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> types <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./types\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> reducer <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./reducers\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Store/state related stuff:</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> reducer<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token punctuation\\\">{</span> actions<span class=\\\"token punctuation\\\">,</span> operations<span class=\\\"token punctuation\\\">,</span> selectors<span class=\\\"token punctuation\\\">,</span> types <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Components:</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">as</span> ComponentNameA <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./components/ComponentNameA\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">as</span> ComponentNameB <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./components/ComponentNameB\\\"</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"action-types\",\n      children: \"Action Types\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Action types are constants used by action creators and reducers. Each action type should be unique, prefixed by the project and module name.\"\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">POSTS_REQUEST</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"@@&lt;project_name>/&lt;module_name>/POSTS_REQUEST\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">POSTS_PROCESS</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"@@&lt;project_name>/&lt;module_name>/POSTS_PROCESS\\\"</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Your action types should be pure string literals. Dynamic string operations (like template strings, string concatenation, etc.) will widen literal type to its supertype string. This will break contextual typing in reducer cases when using TypeScript or Flow.\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"action-creators\",\n      children: \"Action Creators\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The action creators should follow the \", _jsx(_components.a, {\n        href: \"https://github.com/redux-utilities/flux-standard-action\",\n        children: \"Flow Standard Action\"\n      }), \" specification when possible. Action shape should be predictable and known by the developers. Action creators should not contain any logic, nor transform the received payload – it makes them harder to test and the code is harder to debug.\"]\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> createStandardAction <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"typesafe-actions\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> Types <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./actionTypes\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Payload <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./types\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> requestPosts <span class=\\\"token operator\\\">=</span>\\n  <span class=\\\"token function\\\">createStandardAction</span><span class=\\\"token punctuation\\\">(</span>Types<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">POSTS_REQUEST</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">void</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> processPosts <span class=\\\"token operator\\\">=</span>\\n  <span class=\\\"token function\\\">createStandardAction</span><span class=\\\"token punctuation\\\">(</span>Types<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">POSTS_REQUEST</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">&lt;</span>Payload <span class=\\\"token operator\\\">|</span> Error<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You should not export any default value in \", _jsx(_components.code, {\n        children: \"actionCreators.ts\"\n      }), \". Using named exports, it is easier to map dispatch to all actions exposed by a module using \", _jsx(_components.a, {\n        href: \"https://redux.js.org/api/bindactioncreators\",\n        children: _jsx(_components.code, {\n          children: \"bindActionCreators\"\n        })\n      }), \", as follows:\"]\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> bindActionCreators <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"redux\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> Types <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"../../types\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> actions <span class=\\\"token keyword\\\">as</span> moduleActionsA <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"../moduleA\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> actions <span class=\\\"token keyword\\\">as</span> moduleActionsB <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"../moduleB\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">mapDispatchToProps</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>dispatch<span class=\\\"token operator\\\">:</span> Dispatch<span class=\\\"token operator\\\">&lt;</span>Types<span class=\\\"token punctuation\\\">.</span>RootAction<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n  <span class=\\\"token function\\\">bindActionCreators</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>moduleActionsA<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>moduleActionsB <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> dispatch<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"api-calls\",\n      children: \"API Calls\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"API endpoints should not be hand-coded – it makes the code prone to errors and harder to maintain as API evolves. I encourage you to create a small configuration file with all available endpoints in \", _jsx(_components.code, {\n        children: \"config.ts\"\n      }), \" file, then reuse those endpoints in \", _jsx(_components.code, {\n        children: \"apiCalls.ts\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h5, {\n      id: \"configuration\",\n      children: \"Configuration\"\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">URL</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">API</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">{</span>\\n  v1<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    posts<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">number</span><span class=\\\"token punctuation\\\">,</span> meta<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> Object<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token constant\\\">URL</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token constant\\\">API</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">v1/posts/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>id<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token function\\\">createQueryString</span><span class=\\\"token punctuation\\\">(</span>meta<span class=\\\"token punctuation\\\">)</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token function\\\">list</span><span class=\\\"token punctuation\\\">(</span>meta<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> Object<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token constant\\\">URL</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token constant\\\">API</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">v1/posts</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token function\\\">createQueryString</span><span class=\\\"token punctuation\\\">(</span>meta<span class=\\\"token punctuation\\\">)</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n\\n  v2<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">/* ... */</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.h5, {\n      id: \"api-calls-1\",\n      children: \"API Calls\"\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">fetchPost</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">number</span><span class=\\\"token punctuation\\\">,</span> meta<span class=\\\"token operator\\\">:</span> Object<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n  <span class=\\\"token function\\\">fetch</span><span class=\\\"token punctuation\\\">(</span>urls<span class=\\\"token punctuation\\\">.</span>v1<span class=\\\"token punctuation\\\">.</span>posts<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">,</span> meta<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>response <span class=\\\"token operator\\\">=></span> response<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">json</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">fetchPosts</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>meta<span class=\\\"token operator\\\">:</span> Object<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n  <span class=\\\"token function\\\">fetch</span><span class=\\\"token punctuation\\\">(</span>urls<span class=\\\"token punctuation\\\">.</span>v1<span class=\\\"token punctuation\\\">.</span>posts<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">list</span><span class=\\\"token punctuation\\\">(</span>meta<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>response <span class=\\\"token operator\\\">=></span> response<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">json</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"operations\",\n      children: \"Operations\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Operations can be \", _jsx(_components.a, {\n        href: \"https://github.com/reduxjs/redux-thunk\",\n        children: \"thunks\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"https://redux-saga.js.org/\",\n        children: \"sagas\"\n      }), \" and everything else that delays the action dispatch. An operation is a function which can contain logic, dispatch multiple actions based on some predicates and manipulate their payload.\"]\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> Types <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"../types\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> actions <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./actionCreators\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> <span class=\\\"token constant\\\">API</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./apiCalls\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">doFooStuff</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>payload<span class=\\\"token operator\\\">:</span> Object<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n  <span class=\\\"token punctuation\\\">(</span>dispatch<span class=\\\"token operator\\\">:</span> Dispatch<span class=\\\"token operator\\\">&lt;</span>Types<span class=\\\"token punctuation\\\">.</span>RootAction<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span>actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">requestPosts</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token constant\\\">API</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">fetchPosts</span><span class=\\\"token punctuation\\\">(</span>payload<span class=\\\"token punctuation\\\">.</span>meta<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span>actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">processPosts</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">normalizePosts</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">catch</span><span class=\\\"token punctuation\\\">(</span>err <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span>actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">processPosts</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"selectors\",\n      children: \"Selectors\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Selectors can compute derived data, allowing Redux to store the minimal possible state. A selector is not recomputed unless one of its arguments changes. It minimized the amount of component re-renders to the minimum. Have a look at the excellent \", _jsx(_components.a, {\n        href: \"https://github.com/reduxjs/reselect\",\n        children: \"reselect\"\n      }), \" package.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Consider the following example – it renders a list of posts created by the currently logged-in user:\"\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">PostsList</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React</span><span class=\\\"token punctuation\\\">.</span>PureComponent <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>ul<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>posts\\n            <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span>post <span class=\\\"token operator\\\">=></span> post<span class=\\\"token punctuation\\\">.</span>author <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>userId<span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>post <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n              <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n                <span class=\\\"token operator\\\">&lt;</span>p<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span>post<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>p<span class=\\\"token operator\\\">></span>\\n                <span class=\\\"token operator\\\">&lt;</span>p<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span>post<span class=\\\"token punctuation\\\">.</span>content<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>p<span class=\\\"token operator\\\">></span>\\n              <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n            <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>ul<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">mapStateToProps</span> <span class=\\\"token operator\\\">=</span> state <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  posts<span class=\\\"token operator\\\">:</span> state<span class=\\\"token punctuation\\\">.</span>posts<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">,</span>\\n  userId<span class=\\\"token operator\\\">:</span> state<span class=\\\"token punctuation\\\">.</span>auth<span class=\\\"token punctuation\\\">.</span>user<span class=\\\"token punctuation\\\">.</span>id\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In the example above, a render is triggered every time the post collection changes, even if the changed post is not created by the user. Using selectors, we can avoid those unnecessary re-renders and update the component only if one of the user’s posts has been created or modified:\"\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token comment\\\">// selectors.ts</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> createSelector <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"reselect\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">postsSelector</span> <span class=\\\"token operator\\\">=</span> state <span class=\\\"token operator\\\">=></span> state<span class=\\\"token punctuation\\\">.</span>posts<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">userSelector</span> <span class=\\\"token operator\\\">=</span> state <span class=\\\"token operator\\\">=></span> state<span class=\\\"token punctuation\\\">.</span>auth<span class=\\\"token punctuation\\\">.</span>user<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> userPostsSelector <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createSelector</span><span class=\\\"token punctuation\\\">(</span>\\n  postsSelector<span class=\\\"token punctuation\\\">,</span>\\n  userSelector<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">(</span>posts<span class=\\\"token punctuation\\\">,</span> user<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> posts<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span>post <span class=\\\"token operator\\\">=></span> post<span class=\\\"token punctuation\\\">.</span>author <span class=\\\"token operator\\\">===</span> user<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token comment\\\">// PostsList.tsx</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">PostsList</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React</span><span class=\\\"token punctuation\\\">.</span>PureComponent <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>ul<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>userPosts<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>post <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n          <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n            <span class=\\\"token operator\\\">&lt;</span>p<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span>post<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>p<span class=\\\"token operator\\\">></span>\\n            <span class=\\\"token operator\\\">&lt;</span>p<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span>post<span class=\\\"token punctuation\\\">.</span>content<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>p<span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>ul<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">mapStateToProps</span> <span class=\\\"token operator\\\">=</span> state <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  userPosts<span class=\\\"token operator\\\">:</span> <span class=\\\"token function\\\">userPostsSelector</span><span class=\\\"token punctuation\\\">(</span>state<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The other thing about selectors is that it facilitates the work with a part of the application that was developed by somebody else – you don’t need to know the state’ shape to work with it if the exposed selectors are enough and well documented.\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"reducers\",\n      children: \"Reducers\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You should export one reducer per module, but a module can be composed of multiple reducers. Don’t be afraid to break your reducer into multiple chunks to reduce complexity and make it easier to test. You can always combine them using \", _jsx(_components.a, {\n        href: \"https://redux.js.org/api/combinereducers\",\n        children: _jsx(_components.code, {\n          children: \"combineReducers\"\n        })\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> combineReducers <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"redux\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Action<span class=\\\"token punctuation\\\">,</span> PostsState<span class=\\\"token punctuation\\\">,</span> ErrorsState<span class=\\\"token punctuation\\\">,</span> LoadingState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./types\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> Types <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./actionTypes\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">postsReducer</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>state<span class=\\\"token operator\\\">:</span> PostsState <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> action<span class=\\\"token operator\\\">:</span> Action<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">.</span>type<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> Types<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">POSTS_PROCESS</span><span class=\\\"token operator\\\">:</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>action<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> action<span class=\\\"token punctuation\\\">.</span>payload<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">default</span><span class=\\\"token operator\\\">:</span>\\n      <span class=\\\"token keyword\\\">return</span> state<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">errorsReducer</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>state<span class=\\\"token operator\\\">:</span> ErrorsState <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span> action<span class=\\\"token operator\\\">:</span> Action<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">.</span>type<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> Types<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">POSTS_PROCESS</span><span class=\\\"token operator\\\">:</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> action<span class=\\\"token punctuation\\\">.</span>payload<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">default</span><span class=\\\"token operator\\\">:</span>\\n      <span class=\\\"token keyword\\\">return</span> state<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">loadingReducer</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>state<span class=\\\"token operator\\\">:</span> LoadingState <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> action<span class=\\\"token operator\\\">:</span> Action<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">.</span>type<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> Types<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">POSTS_REQUEST</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">case</span> Types<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">POSTS_PROCESS</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">default</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">return</span> state<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">combineReducers</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    data<span class=\\\"token operator\\\">:</span> postsReducer<span class=\\\"token punctuation\\\">,</span>\\n    errors<span class=\\\"token operator\\\">:</span> errorsReducer<span class=\\\"token punctuation\\\">,</span>\\n    loading<span class=\\\"token operator\\\">:</span> loadingReducer\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"types\",\n      children: \"Types\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you use Flow or TypeScript, it’s a good idea to keep all the types in one place (\", _jsx(_components.code, {\n        children: \"types.ts\"\n      }), \"). By doing so, we can expose all of them at once to other modules of the app. This is particularly handy when we need to expose the root \", _jsx(_components.code, {\n        children: \"Action\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"State\"\n      }), \" which is used in every selector and container. Here’s an example of \", _jsx(_components.code, {\n        children: \"/types.ts\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> AnyAction <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"redux\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StateType <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"typesafe-actions\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> rootReducer <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./reducers\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> types <span class=\\\"token keyword\\\">as</span> FooTypes <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"../../modules/foo\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> types <span class=\\\"token keyword\\\">as</span> BarTypes <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"../../modules/bar\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">RootState</span> <span class=\\\"token operator\\\">=</span>\\n  StateType<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">typeof</span> rootReducer<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">RootAction</span> <span class=\\\"token operator\\\">=</span>\\n  FooTypes<span class=\\\"token punctuation\\\">.</span>Action <span class=\\\"token operator\\\">|</span> BarTypes<span class=\\\"token punctuation\\\">.</span>Action <span class=\\\"token operator\\\">|</span> AnyAction<span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"utilities-for-state-management\",\n      children: \"Utilities for state management\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can think of Redux as a low-level API – it doesn’t force any particular patterns and allow you pretty much to do whatever you want.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://ramdajs.com/\",\n          children: \"Ramda\"\n        }), \": a practical functional library for JavaScript programmers.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://github.com/mweststrate/immer\",\n          children: \"Immer\"\n        }), \": create the next immutable state by mutating the current one.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"utilities-for-creating-styles\",\n      children: \"Utilities for creating styles\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Creating styles can be a pain, especially in React Native or when you need to create custom styles based on the state. \", _jsx(_components.a, {\n        href: \"https://www.styled-components.com/ecosystem\",\n        children: \"Styled Components\"\n      }), \" can come handy – they allow you to create styles directly in JavaScript using SCSS syntax.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"tips-and-tricks\",\n      children: \"Tips and tricks\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"you-can-use-reducers-on-inner-state\",\n      children: \"You can use reducers on inner state\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Creating reducers to handle the inner component state is a good practice in the case when you have complex state logic – it is easier to test and in most cases, less error-prone. Creating reducers for inner state management is even easier with the new Hooks API.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Example:\"\n      }), \" from official React \", _jsxs(_components.a, {\n        href: \"https://reactjs.org/docs/hooks-reference.html#usereducer\",\n        children: [_jsx(_components.code, {\n          children: \"useReducer\"\n        }), \" example\"]\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"jsx\\\"><pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> initialState <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token literal-property property\\\">count</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">reducer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">state<span class=\\\"token punctuation\\\">,</span> action</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">.</span>type<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">\\\"increment\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token literal-property property\\\">count</span><span class=\\\"token operator\\\">:</span> state<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">\\\"decrement\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token literal-property property\\\">count</span><span class=\\\"token operator\\\">:</span> state<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">default</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Counter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span>initialState<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>state<span class=\\\"token punctuation\\\">,</span> dispatch<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useReducer</span><span class=\\\"token punctuation\\\">(</span>reducer<span class=\\\"token punctuation\\\">,</span> initialState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      Count: </span><span class=\\\"token punctuation\\\">{</span>state<span class=\\\"token punctuation\\\">.</span>count<span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token literal-property property\\\">type</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"increment\\\"</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">+</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token literal-property property\\\">type</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"decrement\\\"</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">-</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"dos-and-donts\",\n      children: \"Do’s and don’ts\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"never-render-a-list-of-children-without-assigning-a-unique-key-to-each\",\n      children: \"Never render a list of children without assigning a unique key to each\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This can have a huge impact on the performance, even bigger if you rendering a big list of elements. As from React documentation:\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Keys help React identify which items have changed, are added, or are removed. Keys should be given to the elements inside the array to give the elements a stable identity. The best way to pick a key is to use a string that uniquely identifies a list item among its siblings. Most often you would use IDs from your data as keys.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Don’t:\"\n      })\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"jsx\\\"><pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">FooComponent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">item</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Item</span></span> <span class=\\\"token attr-name\\\">data</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>item<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">FooComponent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">item<span class=\\\"token punctuation\\\">,</span> index</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Item</span></span> <span class=\\\"token attr-name\\\">key</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>index<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">data</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>item<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Do:\"\n      })\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"jsx\\\"><pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">FooComponent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">item</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Item</span></span> <span class=\\\"token attr-name\\\">key</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>item<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">data</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>item<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"never-create-functions-or-objects-in-props\",\n      children: \"Never create functions or objects in props\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This can have a huge impact on the performance. If you create new objects or functions in the props, a new reference will be passed down to the child each time its parents re-render, resulting in unnecessary re-renders and probably more unwanted behaviours.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Don’t:\"\n      })\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"jsx\\\"><pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">FooComponent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">FooChild</span></span>\\n        <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">handleClick</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">...</span>args<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">data</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">item</span> <span class=\\\"token operator\\\">=></span> item<span class=\\\"token punctuation\\\">.</span>id <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Do:\"\n      })\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"jsx\\\"><pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">FooComponent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function-variable function\\\">onClick</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token operator\\\">...</span>args</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token parameter\\\">event</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">handleClick</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">...</span>args<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">FooChild</span></span>\\n        <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onClick</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">...</span>args<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">data</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>filteredData<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"avoid-duplicating-data-between-props-and-state\",\n      children: \"Avoid duplicating data between props and state\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If some data can be derived or calculated directly from the props, it’s unnecessary to replicate this data in state. Props should be the only source of truth. In fact – if you want to calculate the state based on the received props, you’ll need to create a \", _jsx(_components.code, {\n        children: \"componentDidUpdate\"\n      }), \" method and keep you state and props in sync – this is an anti-pattern.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The only case when assigning props to state is acceptable is to pass initial data to a component which doesn’t need to be in sync with the store, e.g. forms.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Avoid:\"\n      })\n    }), \"\\n\", _jsx(_components.span, {\n      dangerouslySetInnerHTML: {\n        __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">FooComponent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React</span><span class=\\\"token punctuation\\\">.</span>Component <span class=\\\"token punctuation\\\">{</span>\\n  state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    foo<span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>foo<span class=\\\"token punctuation\\\">,</span>\\n    bar<span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>bar<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n      }\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"avoid-overusing-hocs\",\n      children: \"Avoid overusing HOCs\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As Michael Jackson (React-Router co-creator) said:\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"“Next time you think you need a HOC (higher-order component) in, you probably don't. I can do anything you're doing with your HOC using a regular component with a \", _jsx(_components.a, {\n          href: \"https://reactjs.org/docs/render-props.html\",\n          children: \"render prop\"\n        }), \".“ – \", _jsx(_components.a, {\n          href: \"https://twitter.com/mjackson/status/885910553432018945\",\n          children: \"Michael Jackson\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"avoid-using-components-without-shouldcomponentupdate\",\n      children: [\"Avoid using Components without \", _jsx(_components.code, {\n        children: \"shouldComponentUpdate\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A \", _jsx(_components.a, {\n        href: \"https://reactjs.org/docs/react-component.html\",\n        children: _jsx(_components.code, {\n          children: \"React.Component\"\n        })\n      }), \", when used without \", _jsx(_components.code, {\n        children: \"shouldComponentUpdate\"\n      }), \", will re-render on every prop and state change.\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Consider creating a \", _jsx(_components.code, {\n          children: \"shouldComponentUpdate() \"\n        }), \"method to prevent unnecessary re-renders.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Consider using the built-in \", _jsx(_components.code, {\n          children: \"PureComponent\"\n        }), \" instead of writing \", _jsx(_components.code, {\n          children: \"shouldComponentUpdate\"\n        }), \" by hand. \", _jsx(_components.code, {\n          children: \"PureComponent\"\n        }), \" performs a shallow comparison of props and state, and reduces the chance that you’ll skip a necessary update.\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/bartozzz.github.io/bartozzz.github.io/content/blog/2019-03-01-enterprise-scale-react-redux-project-architecture/index.md\";\nimport \"./blog-post.scss\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Alert} from \"../components/Alert\";\nimport {Content} from \"../components/Content\";\nimport {Discussion} from \"../components/Discussion\";\nimport {Formula} from \"../components/Formula\";\nimport {Layout} from \"../components/Layout\";\nimport {SEO} from \"../components/SEO\";\nimport {TableOfContents} from \"../components/TableOfContents\";\nimport {jsx as _jsx} from \"react/jsx-runtime\";\nimport {jsxs as _jsxs} from \"react/jsx-runtime\";\nfunction BlogPostTemplate(_ref) {\n  let {pageContext, children} = _ref;\n  const post = pageContext.data;\n  const {frontmatter, tableOfContents} = post;\n  const {title, datePublished, language, authors} = frontmatter;\n  return _jsx(Layout, {\n    children: _jsx(Content, {\n      children: _jsxs(\"article\", {\n        className: \"post\",\n        itemScope: true,\n        itemType: \"http://schema.org/Article\",\n        lang: language,\n        children: [_jsxs(\"header\", {\n          className: \"post__header\",\n          children: [_jsx(\"h1\", {\n            itemProp: \"headline\",\n            children: title\n          }), _jsx(\"time\", {\n            dateTime: datePublished,\n            itemProp: \"datePublished\",\n            children: datePublished\n          }), authors !== null && authors !== void 0 && authors.length ? _jsx(\"ul\", {\n            className: \"visually-hidden\",\n            children: authors.map(author => _jsx(\"li\", {\n              children: _jsx(\"p\", {\n                itemProp: \"author\",\n                children: author\n              })\n            }, author))\n          }) : null]\n        }), _jsxs(\"div\", {\n          className: \"post__wrapper\",\n          children: [_jsx(\"div\", {\n            className: \"post__toc\",\n            children: _jsx(TableOfContents, {\n              data: tableOfContents\n            })\n          }), _jsxs(\"div\", {\n            className: \"post__content\",\n            children: [_jsx(\"div\", {\n              itemProp: \"articleBody\",\n              children: _jsx(MDXProvider, {\n                components: {\n                  Alert,\n                  Formula\n                },\n                children: children\n              })\n            }), _jsx(Discussion, {\n              lang: language\n            })]\n          })]\n        })]\n      })\n    })\n  });\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport function Head(_ref2) {\n  let {pageContext} = _ref2;\n  const post = pageContext.data;\n  const {excerpt} = post;\n  const {title, description} = post.frontmatter;\n  return _jsx(SEO, {\n    title: title,\n    description: description || excerpt\n  });\n}\n","// extracted by mini-css-extract-plugin\nexport var alert = \"index-module--alert--af406\";\nexport var alert__failure = \"index-module--alert__failure--c7bcc\";\nexport var alert__info = \"index-module--alert__info--cfa0f\";\nexport var alert__success = \"index-module--alert__success--14443\";\nexport var alert__warning = \"index-module--alert__warning--5ba8e\";","import * as css from \"./index.module.scss\";\n\nimport * as React from \"react\";\n\ninterface Props {\n  as?: string | React.ComponentType<unknown>;\n  type?: \"success\" | \"failure\" | \"warning\" | \"info\";\n}\n\nexport function Alert({\n  children,\n  as = \"aside\",\n  type = \"info\",\n  ...props\n}: React.PropsWithChildren<Props>) {\n  const Wrapper = (\n    props: React.DetailedHTMLProps<\n      React.HTMLAttributes<HTMLElement>,\n      HTMLElement\n    >,\n  ) => React.createElement(as, props);\n\n  return (\n    <Wrapper {...props} className={`${css.alert} ${css[`alert__${type}`]}`}>\n      {children}\n    </Wrapper>\n  );\n}\n","import \"./index.scss\";\n\nimport * as React from \"react\";\n\nimport { useTheme } from \"../../hooks/useTheme\";\n\nfunction sendGiscusMessage<T>(message: T) {\n  const iframe = document.querySelector<HTMLIFrameElement>(\n    \"iframe.giscus-frame\",\n  );\n\n  if (iframe) {\n    iframe.contentWindow.postMessage({ giscus: message }, \"https://giscus.app\");\n  }\n}\n\nfunction createGiscusTag({ theme, lang }: { theme: Theme; lang: string }) {\n  const origin = typeof window !== \"undefined\" ? window.location.origin : \"\";\n  const lightThemePath = `${origin}/discussion-light.css`;\n  const darkThemePath = `${origin}/discussion-dark.css`;\n  const initialTheme = theme === \"dark\" ? darkThemePath : lightThemePath;\n\n  return `\n    <script src=\"https://giscus.app/client.js\"\n      data-repo=\"Bartozzz/bartozzz.github.io\"\n      data-repo-id=\"MDEwOlJlcG9zaXRvcnkyNDk1MjY5MQ==\"\n      data-category=\"Discussion\"\n      data-category-id=\"DIC_kwDOAXy_c84CAHzq\"\n      data-mapping=\"pathname\"\n      data-reactions-enabled=\"1\"\n      data-emit-metadata=\"0\"\n      data-theme=\"${initialTheme}\"\n      data-lang=\"${lang}\"\n      crossorigin=\"anonymous\"\n      async>\n    </script>\n  `;\n}\n\nexport function Discussion({ lang = \"en\" }: { lang?: string }) {\n  const divRef = React.useRef<HTMLDivElement>();\n  const [theme] = useTheme();\n  const hasTheme = theme !== null;\n\n  React.useLayoutEffect(() => {\n    const div = divRef.current;\n\n    if (!div || !hasTheme) {\n      return;\n    }\n\n    const scriptTag = createGiscusTag({ theme, lang });\n    const slotHtml = document.createRange().createContextualFragment(scriptTag);\n\n    div?.appendChild(slotHtml);\n\n    return () => {\n      div.innerHTML = \"\";\n    };\n  }, [hasTheme]);\n\n  React.useEffect(() => {\n    const origin = typeof window !== \"undefined\" ? window.location.origin : \"\";\n    const lightThemePath = `${origin}/discussion-light.css`;\n    const darkThemePath = `${origin}/discussion-dark.css`;\n    const newTheme = theme === \"dark\" ? darkThemePath : lightThemePath;\n\n    sendGiscusMessage({\n      setConfig: {\n        theme: newTheme,\n        lang,\n      },\n    });\n  }, [theme, lang]);\n\n  return (\n    <>\n      <div className={`comments--${theme}`} ref={divRef}></div>\n    </>\n  );\n}\n","import r,{memo as e,useState as n,useEffect as t}from\"react\";import o from\"katex\";function a(){return(a=Object.assign||function(r){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(r[t]=n[t])}return r}).apply(this,arguments)}var i=e(function(e){var i=e.children,l=e.math,s=e.block,c=e.errorColor,f=e.renderError,m=e.settings,u=e.as,h=function(r,e){if(null==r)return{};var n,t,o={},a=Object.keys(r);for(t=0;t<a.length;t++)e.indexOf(n=a[t])>=0||(o[n]=r[n]);return o}(e,[\"children\",\"math\",\"block\",\"errorColor\",\"renderError\",\"settings\",\"as\"]),d=u||(s?\"div\":\"span\"),p=null!=i?i:l,g=n({innerHtml:\"\"}),E=g[0],v=g[1];return t(function(){try{var r=o.renderToString(p,a({displayMode:!!s,errorColor:c,throwOnError:!!f},m));v({innerHtml:r})}catch(r){if(!(r instanceof o.ParseError||r instanceof TypeError))throw r;v(f?{errorElement:f(r)}:{innerHtml:r.message})}},[s,p,c,f,m]),\"errorElement\"in E?E.errorElement:r.createElement(d,Object.assign({},h,{dangerouslySetInnerHTML:{__html:E.innerHtml}}))});export default i;\n//# sourceMappingURL=react-katex.m.js.map\n","import \"./index.scss\";\n\nimport TeX from \"@matejmazur/react-katex\";\n\nexport const Formula = TeX;\n","// extracted by mini-css-extract-plugin\nexport var toc = \"index-module--toc--16eb9\";\nexport var toc__ellipsis = \"index-module--toc__ellipsis--2a1a1\";\nexport var toc__link = \"index-module--toc__link--1571c\";\nexport var toc__linkActive = \"index-module--toc__link--active--2b793\";\nexport var toc__list = \"index-module--toc__list--19652\";\nexport var toc__title = \"index-module--toc__title--91e5c\";","import * as css from \"./index.module.scss\";\n\nimport * as React from \"react\";\n\nimport { Link } from \"gatsby\";\n\nimport {\n  TableOfContents as TTableOfContents,\n  TableOfContentItem,\n} from \"../../../gatsby/types/queries\";\n\ninterface Props {\n  data: TTableOfContents;\n}\n\nfunction flattenTableOfContents(\n  input: TableOfContentItem[],\n): TableOfContentItem[] {\n  return input.flatMap(({ url, title, items }) => [\n    { url, title },\n    ...(items ? flattenTableOfContents(items) : []),\n  ]);\n}\n\nexport function TableOfContents({ data }: Props) {\n  const [activeHeadingId, setActiveHeadingId] = React.useState<string>();\n  const headingsIDs = flattenTableOfContents(data.items);\n\n  console.log({ data, activeHeadingId });\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setActiveHeadingId(`#${entry.target.id}`);\n          }\n        });\n      },\n      { rootMargin: `0% 0% -80% 0%` },\n    );\n\n    headingsIDs.forEach((item) => {\n      const element = document.querySelector(item.url);\n\n      if (element) {\n        observer.observe(element);\n      }\n    });\n\n    return () => {\n      headingsIDs.forEach((item) => {\n        const element = document.querySelector(item.url);\n\n        if (element) {\n          observer.unobserve(element);\n        }\n      });\n    };\n  }, [headingsIDs]);\n\n  return (\n    <nav aria-label=\"On this page\" className={css.toc}>\n      <p className={css.toc__title}>Contents</p>\n      <TableOfContentsList tree={data} activeSlug={activeHeadingId} />\n    </nav>\n  );\n}\n\nexport function TableOfContentsList({\n  tree,\n  activeSlug,\n}: {\n  tree: TTableOfContents;\n  activeSlug: string;\n}) {\n  return (\n    <ol className={css.toc__list}>\n      {tree.items.map((heading) => (\n        <li key={heading.url}>\n          <Link\n            to={heading.url}\n            title={heading.title}\n            className={`${css.toc__link} ${\n              activeSlug === heading.url ? css.toc__linkActive : \"\"\n            }`}\n          >\n            <span className={css.toc__ellipsis}>{heading.title}</span>\n          </Link>\n\n          {heading.items?.length > 0 && (\n            <TableOfContentsList tree={heading} activeSlug={activeSlug} />\n          )}\n        </li>\n      ))}\n    </ol>\n  );\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","ul","li","a","strong","h2","span","h3","code","h4","blockquote","h5","ol","_provideComponents","components","_jsxs","_Fragment","children","_jsx","href","id","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","BlogPostTemplate","_ref","pageContext","post","data","frontmatter","tableOfContents","title","datePublished","language","authors","Layout","Content","className","itemScope","itemType","lang","itemProp","dateTime","length","map","author","TableOfContents","MDXProvider","Alert","Formula","Discussion","GatsbyMDXWrapper","React","GATSBY_COMPILED_MDX","Head","_ref2","excerpt","description","SEO","alert__failure","alert__info","alert__success","alert__warning","as","type","Wrapper","css","divRef","theme","useTheme","hasTheme","div","current","scriptTag","origin","window","location","createGiscusTag","slotHtml","document","createRange","createContextualFragment","appendChild","innerHTML","message","iframe","querySelector","contentWindow","postMessage","giscus","sendGiscusMessage","setConfig","ref","r","e","arguments","n","t","prototype","hasOwnProperty","call","apply","this","i","l","math","s","block","c","errorColor","f","renderError","m","settings","u","h","o","keys","indexOf","d","g","innerHtml","E","v","renderToString","displayMode","throwOnError","ParseError","TypeError","errorElement","toc","toc__ellipsis","toc__link","toc__linkActive","toc__list","toc__title","flattenTableOfContents","input","flatMap","url","items","concat","_toConsumableArray","activeHeadingId","setActiveHeadingId","headingsIDs","console","log","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","rootMargin","item","element","observe","unobserve","TableOfContentsList","tree","activeSlug","_ref3","heading","_heading$items","Link","to","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}