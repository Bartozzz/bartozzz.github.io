"use strict";(self.webpackChunklaniewski_me=self.webpackChunklaniewski_me||[]).push([[657],{7848:function(n,s,a){a.r(s),a.d(s,{Head:function(){return m},default:function(){return g}});var e=a(7294),t=a(5893),o=a(1151);function i(n){const s=Object.assign({p:"p",a:"a",em:"em",h2:"h2",blockquote:"blockquote",code:"code",h3:"h3",span:"span"},(0,o.ah)(),n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["There are more than ",(0,t.jsx)(s.a,{href:"https://github.com/facebook/flow/network/dependents",children:"31000 repositories on GitHub"})," using Flow but only a few ones export Flow definitions. In this article, we will see how to export Flow definitions for a module. Before getting started, I encourage you to read my previous article about „",(0,t.jsx)(s.em,{children:(0,t.jsx)(s.a,{href:"/javascript/2018/04/29/publishing-packages-to-npm.html",children:"Publishing tree shaking friendly packages to npm"})}),"”."]}),"\n",(0,t.jsx)(s.h2,{id:"what-is-flow",children:"What is Flow?"}),"\n",(0,t.jsxs)(s.p,{children:["You've probably already seen ",(0,t.jsx)(s.a,{href:"https://www.destroyallsoftware.com/talks/wat",children:"Gary's talk from CodeMash 2012"})," about JavaScript. With Flow in your hands, there should be no more „",(0,t.jsx)(s.em,{children:"wat's"}),"”."]}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:["Flow is a static type checker for your JavaScript code. It does a lot of work to make you more productive. Making you code faster, smarter, more confidently, and to a bigger scale. – ",(0,t.jsx)(s.a,{href:"https://flow.org/en/docs/getting-started/",children:"Introduction to type checking with Flow"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Flow was first presented at the ",(0,t.jsx)(s.a,{href:"https://atscaleconference.com/",children:"Scale Conference"})," in 2014 by Facebook. Its main goal was to add additional syntax to JavaScript language to prevent type errors and give developers a more concise idea about bugs that can occur in their code. It also gives a way for IDEs to provide a better environment for spotting errors in real-time."]}),"\n",(0,t.jsx)(s.h2,{id:"how-to-export-flow-definitions",children:"How to export Flow definitions?"}),"\n",(0,t.jsxs)(s.p,{children:["There are currently two ways of exporting Flow definitions. The easiest one is by exporting ",(0,t.jsx)(s.code,{children:".js.flow"})," files within your package. However, if you are planning on versioning your definitions, you should contribute to ",(0,t.jsx)(s.code,{children:"flow-typed"})," repository instead."]}),"\n",(0,t.jsx)(s.h3,{id:"exporting-flow-files",children:"Exporting Flow files"}),"\n",(0,t.jsxs)(s.p,{children:["All you have to do is copy source files (i.e. not transpiled by ",(0,t.jsx)(s.em,{children:"Flow"})," and ",(0,t.jsx)(s.em,{children:"Babel"}),") to ",(0,t.jsx)(s.code,{children:".js.flow"})," format and include them with the library. Let's start by installing required npm dependencies using the following command:"]}),"\n",(0,t.jsx)(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> --save-dev glob fs-extra</code></pre></div>'}}),"\n",(0,t.jsxs)(s.p,{children:["Once installed, we can write a script which will copy all source files to the ",(0,t.jsx)(s.code,{children:"/dest"})," directory and change their extension to ",(0,t.jsx)(s.code,{children:".js.flow"}),":"]}),"\n",(0,t.jsx)(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token comment">// File: ./bin/defs.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> basename<span class="token punctuation">,</span> resolve <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"path"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> copy <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"fs-extra"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> glob <span class="token keyword">from</span> <span class="token string">"glob"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">copyFile</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> srcDir  <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"../src"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> destDir <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"../dest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> fileDef <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>file<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.flow</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>srcDir<span class="token punctuation">,</span> destDir<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">await</span> <span class="token function">copy</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileDef<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Copied </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>file<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> to </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileDef<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">glob</span><span class="token punctuation">(</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"../src/**/*.js"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> files</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">file</span> <span class="token operator">=></span> <span class="token function">copyFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",(0,t.jsx)(s.p,{children:"Then, you can execute this script at the end of your build pipeline, as follows:"}),"\n",(0,t.jsx)(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="json"><pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>\n  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"npx babel ./src -d ./dest &amp;&amp; npm run defs"</span><span class="token punctuation">,</span>\n    <span class="token property">"watch"</span><span class="token operator">:</span> <span class="token string">"npx babel ./src -d ./dest --watch"</span><span class="token punctuation">,</span>\n    <span class="token property">"defs"</span><span class="token operator">:</span> <span class="token string">"npx babel-node ./bin/defs.js"</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"babel-cli"</span><span class="token operator">:</span> <span class="token string">"^6.26.0"</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",(0,t.jsx)(s.h3,{id:"adding-definitions-to-flow-typed",children:"Adding definitions to flow-typed"}),"\n",(0,t.jsxs)(s.p,{children:["Flow supports library definitions which allow you to describe the interface of a module or library separate from the implementation of that module/library. You can add your own definitions by ",(0,t.jsx)(s.a,{href:"https://github.com/flowtype/flow-typed/wiki/Contributing-Library-Definitions",children:"contributing library definitions"})," which reside in ",(0,t.jsx)(s.code,{children:"flow-typed"})," repository. It will allow people who use your library to fetch definitions by using the following command:"]}),"\n",(0,t.jsx)(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">$ flow-typed <span class="token function">install</span> library@x.x.x</code></pre></div>'}}),"\n",(0,t.jsx)(s.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(s.p,{children:"It is important to export Flow definitions so Flow can give errors if someone accidentally miss-use your library. Additionally, it integrates well with most IDEs, as it gives developers a better experience by providing documentation, auto-complete and errors in real-time."})]})}var c=function(n){void 0===n&&(n={});const{wrapper:s}=Object.assign({},(0,o.ah)(),n.components);return s?(0,t.jsx)(s,Object.assign({},n,{children:(0,t.jsx)(i,n)})):i(n)},r=a(8029),p=a(8875),l=a(180),u=a(317),d=a(5551),h=a(2349),f=a(7123);function k(n){let{pageContext:s,children:a}=n;const e=s.data,{frontmatter:i,tableOfContents:c}=e,{title:h,datePublished:k,language:g,authors:m}=i;return(0,t.jsx)(d.A,{children:(0,t.jsx)(p.V,{children:(0,t.jsxs)("article",{className:"post",itemScope:!0,itemType:"http://schema.org/Article",lang:g,children:[(0,t.jsxs)("header",{className:"post__header",children:[(0,t.jsx)("h1",{itemProp:"headline",children:h}),(0,t.jsx)("time",{dateTime:k,itemProp:"datePublished",children:k}),null!=m&&m.length?(0,t.jsx)("ul",{className:"visually-hidden",children:m.map((n=>(0,t.jsx)("li",{children:(0,t.jsx)("p",{itemProp:"author",children:n})},n)))}):null]}),(0,t.jsxs)("div",{className:"post__wrapper",children:[(0,t.jsx)("div",{className:"post__toc",children:(0,t.jsx)(f.o,{data:c})}),(0,t.jsxs)("div",{className:"post__content",children:[(0,t.jsx)("div",{itemProp:"articleBody",children:(0,t.jsx)(o.Zo,{components:{Alert:r.b,Formula:u.S},children:a})}),(0,t.jsx)(l.$,{lang:g})]})]})]})})})}function g(n){return e.createElement(k,n,e.createElement(c,n))}function m(n){let{pageContext:s}=n;const a=s.data,{excerpt:e}=a,{title:o,description:i}=a.frontmatter;return(0,t.jsx)(h.H,{title:o,description:i||e})}},8029:function(n,s,a){a.d(s,{b:function(){return u}});var e={};a.r(e),a.d(e,{alert:function(){return t},alert__failure:function(){return o},alert__info:function(){return i},alert__success:function(){return c},alert__warning:function(){return r}});var t="index-module--alert--af406",o="index-module--alert__failure--c7bcc",i="index-module--alert__info--cfa0f",c="index-module--alert__success--14443",r="index-module--alert__warning--5ba8e",p=a(7294),l=a(5893);function u(n){let{children:s,as:a="aside",type:o="info",...i}=n;const c=n=>p.createElement(a,n);return(0,l.jsx)(c,{...i,className:`${t} ${e[`alert__${o}`]}`,children:s})}},180:function(n,s,a){a.d(s,{$:function(){return i}});var e=a(7294),t=a(1711),o=a(5893);function i(n){let{lang:s="en"}=n;const a=e.useRef(),[i]=(0,t.F)(),c=null!==i;return e.useLayoutEffect((()=>{const n=a.current;if(!n||!c)return;const e=function(n){let{theme:s,lang:a}=n;const e="undefined"!=typeof window?window.location.origin:"";return`\n    <script src="https://giscus.app/client.js"\n      data-repo="Bartozzz/bartozzz.github.io"\n      data-repo-id="MDEwOlJlcG9zaXRvcnkyNDk1MjY5MQ=="\n      data-category="Discussion"\n      data-category-id="DIC_kwDOAXy_c84CAHzq"\n      data-mapping="pathname"\n      data-reactions-enabled="1"\n      data-emit-metadata="0"\n      data-theme="${"dark"===s?`${e}/discussion-dark.css`:`${e}/discussion-light.css`}"\n      data-lang="${a}"\n      crossorigin="anonymous"\n      async>\n    <\/script>\n  `}({theme:i,lang:s}),t=document.createRange().createContextualFragment(e);return null==n||n.appendChild(t),()=>{n.innerHTML=""}}),[c]),e.useEffect((()=>{const n="undefined"!=typeof window?window.location.origin:"";!function(n){const s=document.querySelector("iframe.giscus-frame");s&&s.contentWindow.postMessage({giscus:n},"https://giscus.app")}({setConfig:{theme:"dark"===i?`${n}/discussion-dark.css`:`${n}/discussion-light.css`,lang:s}})}),[i,s]),(0,o.jsx)(o.Fragment,{children:(0,o.jsx)("div",{className:`comments--${i}`,ref:a})})}},317:function(n,s,a){a.d(s,{S:function(){return i}});var e=a(7294),t=a(1008);function o(){return(o=Object.assign||function(n){for(var s=1;s<arguments.length;s++){var a=arguments[s];for(var e in a)Object.prototype.hasOwnProperty.call(a,e)&&(n[e]=a[e])}return n}).apply(this,arguments)}const i=(0,e.memo)((function(n){var s=n.children,a=n.math,i=n.block,c=n.errorColor,r=n.renderError,p=n.settings,l=n.as,u=function(n,s){if(null==n)return{};var a,e,t={},o=Object.keys(n);for(e=0;e<o.length;e++)s.indexOf(a=o[e])>=0||(t[a]=n[a]);return t}(n,["children","math","block","errorColor","renderError","settings","as"]),d=l||(i?"div":"span"),h=null!=s?s:a,f=(0,e.useState)({innerHtml:""}),k=f[0],g=f[1];return(0,e.useEffect)((function(){try{var n=t.Z.renderToString(h,o({displayMode:!!i,errorColor:c,throwOnError:!!r},p));g({innerHtml:n})}catch(n){if(!(n instanceof t.Z.ParseError||n instanceof TypeError))throw n;g(r?{errorElement:r(n)}:{innerHtml:n.message})}}),[i,h,c,r,p]),"errorElement"in k?k.errorElement:e.createElement(d,Object.assign({},u,{dangerouslySetInnerHTML:{__html:k.innerHtml}}))}))},7123:function(n,s,a){a.d(s,{o:function(){return f}});var e=a(5785),t="index-module--toc--16eb9",o="index-module--toc__ellipsis--2a1a1",i="index-module--toc__link--1571c",c="index-module--toc__link--active--2b793",r="index-module--toc__list--19652",p="index-module--toc__title--91e5c",l=a(7294),u=a(1883),d=a(5893);function h(n){return n.flatMap((n=>{let{url:s,title:a,items:t}=n;return[{url:s,title:a}].concat((0,e.Z)(t?h(t):[]))}))}function f(n){let{data:s}=n;const[a,e]=l.useState(),o=h(s.items);return console.log({data:s,activeHeadingId:a}),l.useEffect((()=>{const n=new IntersectionObserver((n=>{n.forEach((n=>{n.isIntersecting&&e(`#${n.target.id}`)}))}),{rootMargin:"0% 0% -80% 0%"});return o.forEach((s=>{const a=document.querySelector(s.url);a&&n.observe(a)})),()=>{o.forEach((s=>{const a=document.querySelector(s.url);a&&n.unobserve(a)}))}}),[o]),(0,d.jsxs)("nav",{"aria-label":"On this page",className:t,children:[(0,d.jsx)("p",{className:p,children:"Contents"}),(0,d.jsx)(k,{tree:s,activeSlug:a})]})}function k(n){let{tree:s,activeSlug:a}=n;return(0,d.jsx)("ol",{className:r,children:s.items.map((n=>{var s;return(0,d.jsxs)("li",{children:[(0,d.jsx)(u.Link,{to:n.url,title:n.title,className:`${i} ${a===n.url?c:""}`,children:(0,d.jsx)("span",{className:o,children:n.title})}),(null===(s=n.items)||void 0===s?void 0:s.length)>0&&(0,d.jsx)(k,{tree:n,activeSlug:a})]},n.url)}))})}},1151:function(n,s,a){a.d(s,{Zo:function(){return c},ah:function(){return o}});var e=a(7294);const t=e.createContext({});function o(n){const s=e.useContext(t);return e.useMemo((()=>"function"==typeof n?n(s):{...s,...n}),[s,n])}const i={};function c({components:n,children:s,disableParentContext:a}){let c;return c=a?"function"==typeof n?n({}):n||i:o(n),e.createElement(t.Provider,{value:c},s)}}}]);
//# sourceMappingURL=component---src-templates-blog-post-tsx-content-file-path-content-blog-2018-05-13-exporting-flow-definitions-to-npm-index-md-088d9864da8f26cd2e19.js.map