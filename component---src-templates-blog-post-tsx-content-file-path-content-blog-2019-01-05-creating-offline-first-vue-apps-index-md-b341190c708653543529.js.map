{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-content-blog-2019-01-05-creating-offline-first-vue-apps-index-md-b341190c708653543529.js","mappings":"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","sources":["webpack://laniewski-me/./gatsby/helpers/mapSlugToImageName.mjs","webpack://laniewski-me/./src/templates/blog-post.tsx","webpack://laniewski-me/./src/components/Alert/index.module.scss","webpack://laniewski-me/./src/components/Alert/index.tsx","webpack://laniewski-me/./src/components/Discussion/index.tsx","webpack://laniewski-me/./src/components/TableOfContents/index.module.scss","webpack://laniewski-me/./src/components/TableOfContents/index.tsx","webpack://laniewski-me/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["export function mapSlugToImageName(slug) {\n  return slug.replace(\"/blog/\", \"\").replace(/\\/$/, \"\");\n}\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/bartozzz.github.io/bartozzz.github.io/content/blog/2019-01-05-creating-offline-first-vue-apps/index.md\";\nimport \"./blog-post.scss\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {mapSlugToImageName} from \"../../gatsby/helpers/mapSlugToImageName.mjs\";\nimport {Alert} from \"../components/Alert\";\nimport {Content} from \"../components/Content\";\nimport {Discussion} from \"../components/Discussion\";\nimport {Layout} from \"../components/Layout\";\nimport {SEO} from \"../components/SEO\";\nimport {TableOfContents} from \"../components/TableOfContents\";\nimport {jsx as _jsx} from \"react/jsx-runtime\";\nimport {jsxs as _jsxs} from \"react/jsx-runtime\";\nfunction BlogPostTemplate(_ref) {\n  let {data, pageContext, children} = _ref;\n  const post = pageContext.data;\n  const slug = post.fields.slug;\n  const {frontmatter, tableOfContents} = post;\n  const {title, language, authors, datePublished, datePublishedMeta, dateUpdatedMeta} = frontmatter;\n  const siteUrl = data.site.siteMetadata.siteUrl;\n  const thumbnailUrl = `${siteUrl}/thumbnails/${mapSlugToImageName(slug)}.png`;\n  return _jsx(Layout, {\n    children: _jsx(Content, {\n      children: _jsxs(\"article\", {\n        className: \"post\",\n        itemScope: true,\n        itemType: \"http://schema.org/Article\",\n        lang: language,\n        children: [_jsx(\"meta\", {\n          itemProp: \"image\",\n          content: thumbnailUrl\n        }), _jsx(\"meta\", {\n          itemProp: \"dateModified\",\n          content: dateUpdatedMeta\n        }), authors.map(author => _jsx(\"meta\", {\n          itemProp: \"author\",\n          content: author\n        }, author)), _jsxs(\"header\", {\n          className: \"post__header\",\n          children: [_jsx(\"h1\", {\n            itemProp: \"headline\",\n            children: title\n          }), _jsx(\"time\", {\n            dateTime: datePublishedMeta,\n            itemProp: \"datePublished\",\n            children: datePublished\n          })]\n        }), _jsxs(\"div\", {\n          className: \"post__wrapper\",\n          children: [_jsx(\"div\", {\n            className: \"post__toc\",\n            children: _jsx(TableOfContents, {\n              data: tableOfContents\n            })\n          }), _jsxs(\"div\", {\n            className: \"post__content\",\n            children: [_jsx(\"div\", {\n              itemProp: \"articleBody\",\n              children: _jsx(MDXProvider, {\n                components: {\n                  Alert\n                },\n                children: children\n              })\n            }), _jsx(Discussion, {\n              lang: language\n            })]\n          })]\n        })]\n      })\n    })\n  });\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport function Head(_ref2) {\n  let {data, pageContext} = _ref2;\n  const post = pageContext.data;\n  const slug = post.fields.slug;\n  const {excerpt} = post;\n  const {title, description} = post.frontmatter;\n  const siteUrl = data.site.siteMetadata.siteUrl;\n  const thumbnailUrl = `${siteUrl}/thumbnails/${mapSlugToImageName(slug)}.png`;\n  return _jsxs(SEO, {\n    url: `${siteUrl}${slug}`,\n    title: title,\n    image: thumbnailUrl,\n    description: description || excerpt,\n    children: [_jsx(\"link\", {\n      rel: \"canonical\",\n      href: `${siteUrl}${slug}`\n    }), _jsx(\"html\", {\n      className: \"smooth-scroll\"\n    })]\n  });\n}\nconst query = \"698804963\";\n","// extracted by mini-css-extract-plugin\nexport var alert = \"index-module--alert--af406\";\nexport var alert__failure = \"index-module--alert__failure--c7bcc\";\nexport var alert__info = \"index-module--alert__info--cfa0f\";\nexport var alert__success = \"index-module--alert__success--14443\";\nexport var alert__warning = \"index-module--alert__warning--5ba8e\";","import * as css from \"./index.module.scss\";\n\nimport * as React from \"react\";\n\ninterface Props {\n  as?: string | React.ComponentType<unknown>;\n  type?: \"success\" | \"failure\" | \"warning\" | \"info\";\n}\n\nexport function Alert({\n  children,\n  as = \"aside\",\n  type = \"info\",\n  ...props\n}: React.PropsWithChildren<Props>) {\n  const Wrapper = (\n    props: React.DetailedHTMLProps<\n      React.HTMLAttributes<HTMLElement>,\n      HTMLElement\n    >,\n  ) => React.createElement(as, props);\n\n  return (\n    <Wrapper {...props} className={`${css.alert} ${css[`alert__${type}`]}`}>\n      {children}\n    </Wrapper>\n  );\n}\n","import \"./index.scss\";\n\nimport * as React from \"react\";\n\nimport { useTheme } from \"../../hooks/useTheme\";\n\nfunction sendGiscusMessage<T>(message: T) {\n  const iframe = document.querySelector<HTMLIFrameElement>(\n    \"iframe.giscus-frame\",\n  );\n\n  if (iframe) {\n    iframe.contentWindow.postMessage({ giscus: message }, \"https://giscus.app\");\n  }\n}\n\nfunction createGiscusTag({ theme, lang }: { theme: Theme; lang: string }) {\n  const origin = typeof window !== \"undefined\" ? window.location.origin : \"\";\n  const lightThemePath = `${origin}/discussion-light.css`;\n  const darkThemePath = `${origin}/discussion-dark.css`;\n  const initialTheme = theme === \"dark\" ? darkThemePath : lightThemePath;\n\n  return `\n    <script src=\"https://giscus.app/client.js\"\n      data-repo=\"Bartozzz/bartozzz.github.io\"\n      data-repo-id=\"MDEwOlJlcG9zaXRvcnkyNDk1MjY5MQ==\"\n      data-category=\"Discussion\"\n      data-category-id=\"DIC_kwDOAXy_c84CAHzq\"\n      data-mapping=\"pathname\"\n      data-reactions-enabled=\"1\"\n      data-emit-metadata=\"0\"\n      data-theme=\"${initialTheme}\"\n      data-lang=\"${lang}\"\n      crossorigin=\"anonymous\"\n      async>\n    </script>\n  `;\n}\n\nexport function Discussion({ lang = \"en\" }: { lang?: string }) {\n  const divRef = React.useRef<HTMLDivElement>();\n  const [theme] = useTheme();\n  const hasTheme = theme !== null;\n\n  React.useLayoutEffect(() => {\n    const div = divRef.current;\n\n    if (!div || !hasTheme) {\n      return;\n    }\n\n    const scriptTag = createGiscusTag({ theme, lang });\n    const slotHtml = document.createRange().createContextualFragment(scriptTag);\n\n    div?.appendChild(slotHtml);\n\n    return () => {\n      div.innerHTML = \"\";\n    };\n  }, [hasTheme]);\n\n  React.useEffect(() => {\n    const origin = typeof window !== \"undefined\" ? window.location.origin : \"\";\n    const lightThemePath = `${origin}/discussion-light.css`;\n    const darkThemePath = `${origin}/discussion-dark.css`;\n    const newTheme = theme === \"dark\" ? darkThemePath : lightThemePath;\n\n    sendGiscusMessage({\n      setConfig: {\n        theme: newTheme,\n        lang,\n      },\n    });\n  }, [theme, lang]);\n\n  return (\n    <>\n      <div className={`comments--${theme}`} ref={divRef}></div>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var toc = \"index-module--toc--16eb9\";\nexport var toc__ellipsis = \"index-module--toc__ellipsis--2a1a1\";\nexport var toc__link = \"index-module--toc__link--1571c\";\nexport var toc__linkActive = \"index-module--toc__link--active--2b793\";\nexport var toc__list = \"index-module--toc__list--19652\";\nexport var toc__title = \"index-module--toc__title--91e5c\";","import * as css from \"./index.module.scss\";\n\nimport * as React from \"react\";\n\nimport { Link } from \"gatsby\";\n\nimport {\n  TableOfContents as TTableOfContents,\n  TableOfContentItem,\n} from \"../../../gatsby/types/queries\";\n\ninterface Props {\n  data: TTableOfContents;\n}\n\nfunction flattenTableOfContents(\n  input: TableOfContentItem[],\n): TableOfContentItem[] {\n  return input.flatMap(({ url, title, items }) => [\n    { url, title },\n    ...(items ? flattenTableOfContents(items) : []),\n  ]);\n}\n\nexport function TableOfContents({ data }: Props) {\n  const [activeHeadingId, setActiveHeadingId] = React.useState<string>();\n  const headingsIDs = flattenTableOfContents(data.items);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setActiveHeadingId(`#${entry.target.id}`);\n          }\n        });\n      },\n      { rootMargin: `0% 0% -80% 0%` },\n    );\n\n    headingsIDs.forEach((item) => {\n      const element = document.querySelector(item.url);\n\n      if (element) {\n        observer.observe(element);\n      }\n    });\n\n    return () => {\n      headingsIDs.forEach((item) => {\n        const element = document.querySelector(item.url);\n\n        if (element) {\n          observer.unobserve(element);\n        }\n      });\n    };\n  }, [headingsIDs]);\n\n  return (\n    <nav aria-label=\"On this page\" className={css.toc}>\n      <p className={css.toc__title}>Contents</p>\n      <TableOfContentsList tree={data} activeSlug={activeHeadingId} />\n    </nav>\n  );\n}\n\nexport function TableOfContentsList({\n  tree,\n  activeSlug,\n}: {\n  tree: TTableOfContents;\n  activeSlug: string;\n}) {\n  return (\n    <ol className={css.toc__list}>\n      {tree.items.map((heading) => (\n        <li key={heading.url}>\n          <Link\n            to={heading.url}\n            title={heading.title}\n            className={`${css.toc__link} ${\n              activeSlug === heading.url ? css.toc__linkActive : \"\"\n            }`}\n          >\n            <span className={css.toc__ellipsis}>{heading.title}</span>\n          </Link>\n\n          {heading.items?.length > 0 && (\n            <TableOfContentsList tree={heading} activeSlug={activeSlug} />\n          )}\n        </li>\n      ))}\n    </ol>\n  );\n}\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} props\n *   Props.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(props) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (props.disableParentContext) {\n    allComponents =\n      typeof props.components === 'function'\n        ? props.components(emptyComponents)\n        : props.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(props.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    props.children\n  )\n}\n"],"names":["mapSlugToImageName","slug","replace","BlogPostTemplate","_ref","data","pageContext","children","post","fields","frontmatter","tableOfContents","title","language","authors","datePublished","datePublishedMeta","dateUpdatedMeta","thumbnailUrl","site","siteMetadata","siteUrl","_jsx","Layout","Content","_jsxs","className","itemScope","itemType","lang","itemProp","content","map","author","dateTime","TableOfContents","MDXProvider","components","Alert","Discussion","GatsbyMDXWrapper","props","React","GATSBY_COMPILED_MDX","Head","_ref2","excerpt","description","SEO","url","image","rel","href","alert__failure","alert__info","alert__success","alert__warning","as","type","Wrapper","css","divRef","theme","useTheme","hasTheme","div","current","scriptTag","origin","window","location","createGiscusTag","slotHtml","document","createRange","createContextualFragment","appendChild","innerHTML","message","iframe","querySelector","contentWindow","postMessage","giscus","sendGiscusMessage","setConfig","_Fragment","ref","toc","toc__ellipsis","toc__link","toc__linkActive","toc__list","toc__title","flattenTableOfContents","input","flatMap","items","concat","_toConsumableArray","activeHeadingId","setActiveHeadingId","headingsIDs","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","id","rootMargin","item","element","observe","unobserve","TableOfContentsList","tree","activeSlug","_ref3","heading","_heading$items","Link","to","length","emptyComponents","MDXContext","useMDXComponents","contextComponents","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}