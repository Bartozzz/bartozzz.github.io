{"version":3,"file":"component---src-pages-posts-tsx-878418a0b6f48edfd057.js","mappings":"yJACO,I,UCGA,SAASA,EAAT,GAAkE,IAA/CC,EAA8C,EAA9CA,SACxB,OACE,iBAAMC,GAAG,UAAUC,UDLF,+BCK0BC,SAAS,oBAApD,SACGH,M,qDCNA,I,oBCWA,SAASI,EAAT,GAAsE,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,QACxD,OACE,qBACEC,WAAS,EACTC,SAAS,4BACTT,UDf4B,6CCY9B,WAKE,+BACE,iBACEA,UDjBqB,0CCkBrBU,SAAUL,EACVJ,SAAS,gBAHX,SAKGI,KAGH,eAAIL,UD3BoB,2CC2BxB,UACE,SAAC,KAAD,CAAMW,GAAIR,EAAMF,SAAS,MAAzB,UACE,iBAAMA,SAAS,WAAf,SAA2BG,QAI9BE,MAAAA,GAAAA,EAASM,QACR,eAAIZ,UAAU,kBAAd,SACGM,EAAQO,KAAI,SAACC,GAAD,OACX,yBACE,cAAGb,SAAS,SAAZ,SAAsBa,KADfA,QAKX,SAGN,cACEC,wBAAyB,CAAEC,OAAQT,GACnCN,SAAS,cACTD,UD7C0B,oD,uHESnB,SAASiB,EAAT,GAAqC,IAC5CC,EAD2C,EAAfC,KACfC,OAAOC,MAE1B,OACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAKjB,MAAM,eAEX,SAAC,IAAD,WACE,eAAIJ,UAAU,OAAd,SACGkB,EAAML,KAAI,SAACS,GAAD,OACT,yBACE,SAAC,IAAD,CACEnB,KAAMmB,EAAKC,OAAOC,KAClBpB,MAAOkB,EAAKG,YAAYrB,OAASkB,EAAKC,OAAOC,KAC7CnB,KAAMiB,EAAKG,YAAYpB,KACvBC,QAASgB,EAAKG,YAAYnB,QAC1BC,QAASe,EAAKG,YAAYC,aAAeJ,EAAKK,WANzCL,EAAKC,OAAOC","sources":["webpack://laniewski-me/./src/components/Content/index.module.scss","webpack://laniewski-me/./src/components/Content/index.tsx","webpack://laniewski-me/./src/components/PostExcerpt/index.module.scss","webpack://laniewski-me/./src/components/PostExcerpt/index.tsx","webpack://laniewski-me/./src/pages/posts.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var content = \"index-module--content--Ni+7M\";","import * as css from \"./index.module.scss\";\n\nimport * as React from \"react\";\n\nexport function Content({ children }: React.PropsWithChildren<unknown>) {\n  return (\n    <main id=\"content\" className={css.content} itemProp=\"mainContentOfPage\">\n      {children}\n    </main>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var postExcerpt__title = \"index-module--post-excerpt__title---R0AJ\";\nexport var postExcerpt__wrapper = \"index-module--post-excerpt__wrapper--5cYKe\";\nexport var postExcerpt__content = \"index-module--post-excerpt__content--eEd-L\";\nexport var postExcerpt__date = \"index-module--post-excerpt__date--7Ztjd\";","import * as css from \"./index.module.scss\";\n\nimport { Link } from \"gatsby\";\n\ninterface Props {\n  link: string;\n  title: string;\n  date: string;\n  content: string;\n  authors?: string[];\n}\n\nexport function PostExcerpt({ link, title, date, authors, content }: Props) {\n  return (\n    <article\n      itemScope\n      itemType=\"http://schema.org/Article\"\n      className={css.postExcerpt__wrapper}\n    >\n      <header>\n        <time\n          className={css.postExcerpt__date}\n          dateTime={date}\n          itemProp=\"datePublished\"\n        >\n          {date}\n        </time>\n\n        <h2 className={css.postExcerpt__title}>\n          <Link to={link} itemProp=\"url\">\n            <span itemProp=\"headline\">{title}</span>\n          </Link>\n        </h2>\n\n        {authors?.length ? (\n          <ul className=\"visually-hidden\">\n            {authors.map((author) => (\n              <li key={author}>\n                <p itemProp=\"author\">{author}</p>\n              </li>\n            ))}\n          </ul>\n        ) : null}\n      </header>\n\n      <p\n        dangerouslySetInnerHTML={{ __html: content }}\n        itemProp=\"description\"\n        className={css.postExcerpt__content}\n      />\n    </article>\n  );\n}\n","import { graphql } from \"gatsby\";\nimport { PostsPageQuery } from \"../../graphql-types\";\n\nimport { Layout } from \"../components/Layout\";\nimport { SEO } from \"../components/SEO\";\nimport { PostExcerpt } from \"../components/PostExcerpt\";\nimport { Content } from \"../components/Content\";\n\ninterface Props {\n  data: PostsPageQuery;\n}\n\nexport default function PostsPage({ data }: Props) {\n  const posts = data.allMdx.nodes;\n\n  return (\n    <Layout>\n      <SEO title=\"All posts\" />\n\n      <Content>\n        <ol className=\"list\">\n          {posts.map((post) => (\n            <li key={post.fields.slug}>\n              <PostExcerpt\n                link={post.fields.slug}\n                title={post.frontmatter.title || post.fields.slug}\n                date={post.frontmatter.date}\n                authors={post.frontmatter.authors}\n                content={post.frontmatter.description || post.excerpt}\n              />\n            </li>\n          ))}\n        </ol>\n      </Content>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query PostsPage {\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          authors\n          description\n        }\n      }\n    }\n  }\n`;\n"],"names":["Content","children","id","className","itemProp","PostExcerpt","link","title","date","authors","content","itemScope","itemType","dateTime","to","length","map","author","dangerouslySetInnerHTML","__html","PostsPage","posts","data","allMdx","nodes","post","fields","slug","frontmatter","description","excerpt"],"sourceRoot":""}