{"componentChunkName":"component---src-templates-blog-post-tsx-content-file-path-content-blog-react-native-google-mobile-ads-mediation-adapters-in-expo-index-md","path":"/blog/react-native-google-mobile-ads-mediation-adapters-in-expo/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://laniewski.me"}}},"pageContext":{"data":{"id":"97b09153-b887-58bb-9f62-8f61b40baa54","body":"\nAd Mediation is a feature that optimizes ad revenue by enabling multiple Ad Networks to display ads in your app. The [`react-native-google-mobile-ads`](https://github.com/invertase/react-native-google-mobile-ads) package supports Mediation, but integrating additional networks requires extra configuration. This guide will show you how to add Mediation Adapters to an Expo app, using [Unity Ads](https://unity.com/products/unity-ads) as an example.\n\n## Configure react-native-google-mobile-ads\n\nStart by installing the [`react-native-google-mobile-ads`](https://github.com/invertase/react-native-google-mobile-ads) package:\n\n```\n$ npx expo install react-native-google-mobile-ads\n```\n\nNext, update your `app.json` (or `app.config.js` / `app.config.ts`) configuration file, as shown below:\n\n```json\n{\n  \"expo\": {\n    \"plugins\": [\n      [\n        \"react-native-google-mobile-ads\",\n        {\n          \"androidAppId\": \"ca-app-pub-xxxxxxxx~xxxxxxxx\",\n          \"iosAppId\": \"ca-app-pub-xxxxxxxx~xxxxxxxx\"\n        }\n      ]\n    ]\n  }\n}\n```\n\nThen, initialize Google Mobile Ads SDK. This needs to be done only once, at the application launch:\n\n```js\nimport mobileAds from \"react-native-google-mobile-ads\";\n\nmobileAds()\n  .initialize()\n  .then(adapterStatuses => {\n    console.log({ adapterStatuses });\n  });\n```\n\nThis step ensures all Mediation Adapters are initialized. Be sure to wait for the initialization before preloading ads from Mediation partners.\n\n<Alert type=\"info\">\n  For a more in-depth guide on setting-up React Native Google Mobile Ads, please, refer to the [official documentation](https://docs.page/invertase/react-native-google-mobile-ads).\n</Alert>\n\n## Configure Mediation in Google AdMob\n\nFollow the official AdMob guides to set up Mediation:\n\n- [Guide to AdMob Mediation](https://support.google.com/admob/answer/13420272)\n- [Mobile Ads SDK (Android)](https://developers.google.com/admob/android/choose-networks)\n- [Mobile Ads SDK (iOS)](https://developers.google.com/admob/ios/choose-networks)\n\n## Create a Mediation Adapter Expo Plugin\n\nAdding a Mediation Adapter requires incorporating custom native packages. To do this, we will create a custom Expo Plugin and modify the Podfile and Gradle dependencies.\n\n### Install required packages\n\nInstall the [`expo-build-properties`](https://docs.expo.dev/versions/latest/sdk/build-properties/) and [`expo-android-app-gradle-dependencies`](https://github.com/lukawolf/expo-android-app-gradle-dependencies) packages with the following command:\n\n```\n$ npx expo install expo-build-properties expo-android-app-gradle-dependencies\n```\n\nThen, add it to your `app.json` configuration file, as shown below:\n\n```json\n{\n  \"expo\": {\n    \"plugins\": [\n      [\n        \"expo-build-properties\",\n        {\n          \"ios\": {\n            \"useFrameworks\": \"static\"\n          }\n        }\n      ],\n      [\n        \"react-native-google-mobile-ads\",\n        {\n          \"androidAppId\": \"ca-app-pub-xxxxxxxx~xxxxxxxx\",\n          \"iosAppId\": \"ca-app-pub-xxxxxxxx~xxxxxxxx\"\n        }\n      ]\n    ]\n  }\n}\n```\n\n### Create a custom Expo plugin\n\nTo encapsulate all the requirements for Unity Ads mediation, we will ceate a `plugins/withUnityAds.js` file with the following content:\n\n```js\nconst { withBuildProperties } = require(\"expo-build-properties\");\nconst withAppGradleDependencies = require(\"expo-android-app-gradle-dependencies\");\n\nconst withUnityAds = (config) => {\n  // Adds extra Pod, as specified in:\n  // https://developers.google.com/admob/ios/mediation/unity#step_3_import_the_unity_ads_sdk_and_adapter\n  config = withBuildProperties(config, {\n    ios: {\n      extraPods: [\n        { name: \"GoogleMobileAdsMediationUnity\" },\n      ],\n    },\n  });\n\n  // Adds extra Gradle dependencies, as specified in:\n  // https://developers.google.com/admob/android/mediation/unity#android_studio_integration_recommended\n  config = withAppGradleDependencies(config, {\n    dependencies: [\n      \"com.unity3d.ads:unity-ads:4.12.4\",\n      \"com.google.ads.mediation:unity:4.12.5.0\",\n    ],\n  });\n\n  return config;\n};\n\nmodule.exports = withUnityAds;\n```\n\nThen, add your plugin to the plugins list in the `app.json` configuration file:\n\n```json\n{\n  \"expo\": {\n    \"plugins\": [\n      \"./plugins/withUnityAds\",\n      [\n        \"expo-build-properties\",\n        {\n          \"ios\": {\n            \"useFrameworks\": \"static\"\n          }\n        }\n      ],\n      [\n        \"react-native-google-mobile-ads\",\n        {\n          \"androidAppId\": \"ca-app-pub-xxxxxxxx~xxxxxxxx\",\n          \"iosAppId\": \"ca-app-pub-xxxxxxxx~xxxxxxxx\"\n        }\n      ]\n    ]\n  }\n}\n```\n\n<Alert type=\"warning\">\n  The `withUnityAds` plugin must be listed before the `expo-build-properties`.\n</Alert>\n\nWith this done, you should see dependencies correctly added.\n\n### Expected results in `android/app/build.gradle`\n\n```diff\ndependencies {\n    ...\n\n+    // START expo-android-app-gradle-dependencies\n+    implementation(\"com.unity3d.ads:unity-ads:4.12.4\")\n+    implementation(\"com.google.ads.mediation:unity:4.12.5.0\")\n+    // END expo-android-app-gradle-dependencies\n}\n```\n\n### Expected results in `ios/Podfile.lock`\n\n```diff\n+  - GoogleMobileAdsMediationUnity (4.12.5.0):\n+    - Google-Mobile-Ads-SDK (~> 11.0)\n+    - UnityAds (= 4.12.5)\n```\n\n\n## Update the SKAdNetwork list\n\nThe Google Mobile Ads SDK supports conversion tracking using Apple’s SKAdNetwork, which lets Google and participating third-party buyers attribute an app install even when the IDFA is unavailable. Update the list of identifiers in `app.json` to include Unity Ads identifiers:\n\n```json\n{\n  \"expo\": {\n    \"plugins\": [\n      // ...\n      [\n        \"react-native-google-mobile-ads\",\n        {\n          \"androidAppId\": \"ca-app-pub-xxxxxxxx~xxxxxxxx\",\n          \"iosAppId\": \"ca-app-pub-xxxxxxxx~xxxxxxxx\",\n          \"skAdNetworkItems\": [\n            \"cstr6suwn9.skadnetwork\",\n            \"4fzdc2evr5.skadnetwork\",\n            // ...\n            \"3rd42ekr43.skadnetwork\",\n            \"3qcr597p9d.skadnetwork\"\n          ]\n        }\n      ]\n    ]\n  }\n}\n```\n\nRefer to these resources for the latest identifiers:\n- [Google SKAdNetwork Identifiers](https://developers.google.com/ad-manager/mobile-ads-sdk/ios/3p-skadnetworks)\n- [Unity Ads SKAdNetwork Identifiers](https://skan.mz.unity3d.com/v3/partner/skadnetworks.plist.json)\n\nRemember to periodically update the list to ensure the ad network identifiers are up-to-date.\n\n## Test your Mediation setup\n\nTo verify if your Mediation Partner is serving ads, enable [the Ad Inspector](https://developers.google.com/admob/android/ad-inspector) by adding the following code:\n\n```ts\nimport mobileAds from \"react-native-google-mobile-ads\";\n\nmobileAds()\n  .initialize()\n  .then(adapterStatuses => {\n    mobileAds().openDebugMenu();\n  });\n```\n\nYou can use the **“Single ad source test”** feature in the Ad Inspector to select your Mediation Partner from the list. Then, request a new ad and verify if the Mediation Partner correctly fills it. Make sure that your test device is registered in the Mediation Partner’s dashboard.\n","excerpt":"Ad Mediation is a feature that optimizes ad revenue by enabling multiple Ad Networks to display ads in your app. The react-native-google-mobile-ads packag…","tableOfContents":{"items":[{"url":"#configure-react-native-google-mobile-ads","title":"Configure react-native-google-mobile-ads"},{"url":"#configure-mediation-in-google-admob","title":"Configure Mediation in Google AdMob"},{"url":"#create-a-mediation-adapter-expo-plugin","title":"Create a Mediation Adapter Expo Plugin","items":[{"url":"#install-required-packages","title":"Install required packages"},{"url":"#create-a-custom-expo-plugin","title":"Create a custom Expo plugin"},{"url":"#expected-results-in-androidappbuildgradle","title":"Expected results in android/app/build.gradle"},{"url":"#expected-results-in-iospodfilelock","title":"Expected results in ios/Podfile.lock"}]},{"url":"#update-the-skadnetwork-list","title":"Update the SKAdNetwork list"},{"url":"#test-your-mediation-setup","title":"Test your Mediation setup"}]},"fields":{"slug":"/blog/react-native-google-mobile-ads-mediation-adapters-in-expo/","timeToRead":{"minutes":3.45,"words":690}},"frontmatter":{"title":"How to add Ads Mediation Adapters for AdMob using Expo Plugins?","authors":["Bartosz Łaniewski"],"keywords":["React Native"],"language":"en","description":null,"dateCreated":"December 18, 2024","dateCreatedMeta":"2024-12-18 15:00:00 +0100","dateUpdated":"December 18, 2024","dateUpdatedMeta":"2024-12-18 15:00:00 +0100","datePublished":"December 18, 2024","datePublishedMeta":"2024-12-18 15:00:00 +0100"},"internal":{"contentFilePath":"/home/runner/work/bartozzz.github.io/bartozzz.github.io/content/blog/react-native-google-mobile-ads-mediation-adapters-in-expo/index.md"}},"frontmatter":{"title":"How to add Ads Mediation Adapters for AdMob using Expo Plugins?","authors":["Bartosz Łaniewski"],"keywords":["React Native"],"language":"en","dateCreated":"2024-12-18 15:00:00 +0100","dateUpdated":"2024-12-18 15:00:00 +0100","datePublished":"2024-12-18 15:00:00 +0100"}}},"staticQueryHashes":["1271460761","3216310583"],"slicesMap":{}}