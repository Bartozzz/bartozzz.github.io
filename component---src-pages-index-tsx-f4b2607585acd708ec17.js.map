{"version":3,"file":"component---src-pages-index-tsx-f4b2607585acd708ec17.js","mappings":"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","sources":["webpack://laniewski-me/./node_modules/change-case/dist/index.js","webpack://laniewski-me/./gatsby/helpers/mapKeywordToSlug.mjs","webpack://laniewski-me/./gatsby/helpers/mapSlugToImageName.mjs","webpack://laniewski-me/./src/components/Keyword/index.module.scss","webpack://laniewski-me/./src/components/Keyword/index.tsx","webpack://laniewski-me/./src/components/PostExcerpt/PostAuthors.tsx","webpack://laniewski-me/./src/components/PostExcerpt/PostTimeToRead.tsx","webpack://laniewski-me/./src/components/PostExcerpt/index.module.scss","webpack://laniewski-me/./src/components/PostExcerpt/PostKeywords.tsx","webpack://laniewski-me/./src/components/PostExcerpt/index.tsx","webpack://laniewski-me/./src/components/GameCard/index.module.scss","webpack://laniewski-me/./src/components/GameCard/index.tsx","webpack://laniewski-me/./src/components/Heading/index.module.scss","webpack://laniewski-me/./src/components/Heading/index.tsx","webpack://laniewski-me/./src/components/Hero/index.module.scss","webpack://laniewski-me/./src/components/Hero/index.tsx","webpack://laniewski-me/./src/components/Repository/index.module.scss","webpack://laniewski-me/./src/components/Repository/index.tsx","webpack://laniewski-me/./src/pages/index.tsx"],"sourcesContent":["// Regexps involved with splitting words in various case formats.\nconst SPLIT_LOWER_UPPER_RE = /([\\p{Ll}\\d])(\\p{Lu})/gu;\nconst SPLIT_UPPER_UPPER_RE = /(\\p{Lu})([\\p{Lu}][\\p{Ll}])/gu;\n// Used to iterate over the initial split result and separate numbers.\nconst SPLIT_SEPARATE_NUMBER_RE = /(\\d)\\p{Ll}|(\\p{L})\\d/u;\n// Regexp involved with stripping non-word characters from the result.\nconst DEFAULT_STRIP_REGEXP = /[^\\p{L}\\d]+/giu;\n// The replacement value for splits.\nconst SPLIT_REPLACE_VALUE = \"$1\\0$2\";\n// The default characters to keep after transforming case.\nconst DEFAULT_PREFIX_SUFFIX_CHARACTERS = \"\";\n/**\n * Split any cased input strings into an array of words.\n */\nexport function split(value) {\n    let result = value.trim();\n    result = result\n        .replace(SPLIT_LOWER_UPPER_RE, SPLIT_REPLACE_VALUE)\n        .replace(SPLIT_UPPER_UPPER_RE, SPLIT_REPLACE_VALUE);\n    result = result.replace(DEFAULT_STRIP_REGEXP, \"\\0\");\n    let start = 0;\n    let end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === \"\\0\")\n        start++;\n    if (start === end)\n        return [];\n    while (result.charAt(end - 1) === \"\\0\")\n        end--;\n    return result.slice(start, end).split(/\\0/g);\n}\n/**\n * Split the input string into an array of words, separating numbers.\n */\nexport function splitSeparateNumbers(value) {\n    const words = split(value);\n    for (let i = 0; i < words.length; i++) {\n        const word = words[i];\n        const match = SPLIT_SEPARATE_NUMBER_RE.exec(word);\n        if (match) {\n            const offset = match.index + (match[1] ?? match[2]).length;\n            words.splice(i, 1, word.slice(0, offset), word.slice(offset));\n        }\n    }\n    return words;\n}\n/**\n * Convert a string to space separated lower case (`foo bar`).\n */\nexport function noCase(input, options) {\n    const [prefix, words, suffix] = splitPrefixSuffix(input, options);\n    return (prefix +\n        words.map(lowerFactory(options?.locale)).join(options?.delimiter ?? \" \") +\n        suffix);\n}\n/**\n * Convert a string to camel case (`fooBar`).\n */\nexport function camelCase(input, options) {\n    const [prefix, words, suffix] = splitPrefixSuffix(input, options);\n    const lower = lowerFactory(options?.locale);\n    const upper = upperFactory(options?.locale);\n    const transform = options?.mergeAmbiguousCharacters\n        ? capitalCaseTransformFactory(lower, upper)\n        : pascalCaseTransformFactory(lower, upper);\n    return (prefix +\n        words\n            .map((word, index) => {\n            if (index === 0)\n                return lower(word);\n            return transform(word, index);\n        })\n            .join(options?.delimiter ?? \"\") +\n        suffix);\n}\n/**\n * Convert a string to pascal case (`FooBar`).\n */\nexport function pascalCase(input, options) {\n    const [prefix, words, suffix] = splitPrefixSuffix(input, options);\n    const lower = lowerFactory(options?.locale);\n    const upper = upperFactory(options?.locale);\n    const transform = options?.mergeAmbiguousCharacters\n        ? capitalCaseTransformFactory(lower, upper)\n        : pascalCaseTransformFactory(lower, upper);\n    return prefix + words.map(transform).join(options?.delimiter ?? \"\") + suffix;\n}\n/**\n * Convert a string to pascal snake case (`Foo_Bar`).\n */\nexport function pascalSnakeCase(input, options) {\n    return capitalCase(input, { delimiter: \"_\", ...options });\n}\n/**\n * Convert a string to capital case (`Foo Bar`).\n */\nexport function capitalCase(input, options) {\n    const [prefix, words, suffix] = splitPrefixSuffix(input, options);\n    const lower = lowerFactory(options?.locale);\n    const upper = upperFactory(options?.locale);\n    return (prefix +\n        words\n            .map(capitalCaseTransformFactory(lower, upper))\n            .join(options?.delimiter ?? \" \") +\n        suffix);\n}\n/**\n * Convert a string to constant case (`FOO_BAR`).\n */\nexport function constantCase(input, options) {\n    const [prefix, words, suffix] = splitPrefixSuffix(input, options);\n    return (prefix +\n        words.map(upperFactory(options?.locale)).join(options?.delimiter ?? \"_\") +\n        suffix);\n}\n/**\n * Convert a string to dot case (`foo.bar`).\n */\nexport function dotCase(input, options) {\n    return noCase(input, { delimiter: \".\", ...options });\n}\n/**\n * Convert a string to kebab case (`foo-bar`).\n */\nexport function kebabCase(input, options) {\n    return noCase(input, { delimiter: \"-\", ...options });\n}\n/**\n * Convert a string to path case (`foo/bar`).\n */\nexport function pathCase(input, options) {\n    return noCase(input, { delimiter: \"/\", ...options });\n}\n/**\n * Convert a string to path case (`Foo bar`).\n */\nexport function sentenceCase(input, options) {\n    const [prefix, words, suffix] = splitPrefixSuffix(input, options);\n    const lower = lowerFactory(options?.locale);\n    const upper = upperFactory(options?.locale);\n    const transform = capitalCaseTransformFactory(lower, upper);\n    return (prefix +\n        words\n            .map((word, index) => {\n            if (index === 0)\n                return transform(word);\n            return lower(word);\n        })\n            .join(options?.delimiter ?? \" \") +\n        suffix);\n}\n/**\n * Convert a string to snake case (`foo_bar`).\n */\nexport function snakeCase(input, options) {\n    return noCase(input, { delimiter: \"_\", ...options });\n}\n/**\n * Convert a string to header case (`Foo-Bar`).\n */\nexport function trainCase(input, options) {\n    return capitalCase(input, { delimiter: \"-\", ...options });\n}\nfunction lowerFactory(locale) {\n    return locale === false\n        ? (input) => input.toLowerCase()\n        : (input) => input.toLocaleLowerCase(locale);\n}\nfunction upperFactory(locale) {\n    return locale === false\n        ? (input) => input.toUpperCase()\n        : (input) => input.toLocaleUpperCase(locale);\n}\nfunction capitalCaseTransformFactory(lower, upper) {\n    return (word) => `${upper(word[0])}${lower(word.slice(1))}`;\n}\nfunction pascalCaseTransformFactory(lower, upper) {\n    return (word, index) => {\n        const char0 = word[0];\n        const initial = index > 0 && char0 >= \"0\" && char0 <= \"9\" ? \"_\" + char0 : upper(char0);\n        return initial + lower(word.slice(1));\n    };\n}\nfunction splitPrefixSuffix(input, options = {}) {\n    const splitFn = options.split ?? (options.separateNumbers ? splitSeparateNumbers : split);\n    const prefixCharacters = options.prefixCharacters ?? DEFAULT_PREFIX_SUFFIX_CHARACTERS;\n    const suffixCharacters = options.suffixCharacters ?? DEFAULT_PREFIX_SUFFIX_CHARACTERS;\n    let prefixIndex = 0;\n    let suffixIndex = input.length;\n    while (prefixIndex < input.length) {\n        const char = input.charAt(prefixIndex);\n        if (!prefixCharacters.includes(char))\n            break;\n        prefixIndex++;\n    }\n    while (suffixIndex > prefixIndex) {\n        const index = suffixIndex - 1;\n        const char = input.charAt(index);\n        if (!suffixCharacters.includes(char))\n            break;\n        suffixIndex = index;\n    }\n    return [\n        input.slice(0, prefixIndex),\n        splitFn(input.slice(prefixIndex, suffixIndex)),\n        input.slice(suffixIndex),\n    ];\n}\n//# sourceMappingURL=index.js.map","import * as changeCase from \"change-case\";\n\nexport function mapKeywordToSlug(category) {\n  return changeCase.kebabCase(category.trim().toLowerCase());\n}\n","export function mapSlugToImageName(slug) {\n  return slug.replace(\"/blog/\", \"\").replace(/\\/$/, \"\").replace(\"/\", \"-\");\n}\n","// extracted by mini-css-extract-plugin\nexport var keyword = \"index-module--keyword--3eada\";\nexport var keyword__outlined = \"index-module--keyword__outlined--b6086\";\nexport var keyword__wide = \"index-module--keyword__wide--cd44d\";","import * as css from \"./index.module.scss\";\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLElement>,\n    HTMLElement\n  > {\n  children: string;\n  outlined?: boolean;\n  wide?: boolean;\n}\n\nexport function Keyword({\n  children,\n  outlined,\n  wide,\n  ...detailedHTMLProps\n}: Props) {\n  return (\n    <strong\n      className={`${css.keyword} ${outlined ? css.keyword__outlined : \"\"} ${\n        wide ? css.keyword__wide : \"\"\n      }`}\n      title={`Topic: ${children}`}\n      {...detailedHTMLProps}\n    >\n      {children}\n    </strong>\n  );\n}\n","import * as React from \"react\";\n\ninterface PostAuthorsProps extends React.HTMLAttributes<HTMLSpanElement> {\n  data: string[];\n}\n\nexport function PostAuthors({ data, ...props }: PostAuthorsProps) {\n  return (\n    <span {...props}>\n      {\"By \"}\n      {data.map((author, index) => (\n        <React.Fragment key={author}>\n          <span\n            itemScope\n            itemProp=\"author\"\n            itemType=\"https://schema.org/Person\"\n          >\n            <span itemProp=\"name\">{author}</span>\n          </span>\n\n          {index < data.length - 1 ? \" and \" : \"\"}\n        </React.Fragment>\n      ))}\n    </span>\n  );\n}\n","import * as React from \"react\";\n\ninterface PostTimeToReadProps\n  extends React.TimeHTMLAttributes<HTMLTimeElement> {\n  value: number;\n}\n\nexport function PostTimeToRead({ value, ...props }: PostTimeToReadProps) {\n  // Assuming it's in minutes - hopefully I won't write articles that take hours\n  // to read:\n  const timeToReadRounded = Math.ceil(value);\n  const timeToReadMeta = `PT${timeToReadRounded}M`;\n\n  return (\n    <time {...props} itemProp=\"timeRequired\" dateTime={timeToReadMeta}>\n      {timeToReadRounded} min read\n    </time>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var postExcerpt__content = \"index-module--post-excerpt__content--78477\";\nexport var postExcerpt__info = \"index-module--post-excerpt__info--f519a\";\nexport var postExcerpt__keyword = \"index-module--post-excerpt__keyword--a0c11\";\nexport var postExcerpt__title = \"index-module--post-excerpt__title--fd1d0\";\nexport var postExcerpt__wrapper = \"index-module--post-excerpt__wrapper--e5c60\";","import * as React from \"react\";\n\nimport { Link } from \"gatsby\";\n\nimport { mapKeywordToSlug } from \"../../../gatsby/helpers/mapKeywordToSlug.mjs\";\n\ninterface PostKeywordsProps\n  extends React.AnchorHTMLAttributes<HTMLAnchorElement> {\n  data: string[];\n}\n\nexport function PostKeywords({ data, ...props }: PostKeywordsProps) {\n  return data.map((keyword, index) => (\n    <React.Fragment key={keyword}>\n      <Link\n        {...props}\n        to={`/posts/${mapKeywordToSlug(keyword)}/`}\n        title={`Category: ${keyword}`}\n      >\n        {keyword}\n      </Link>\n      {index !== data.length - 1 ? \", \" : null}\n    </React.Fragment>\n  ));\n}\n","import * as css from \"./index.module.scss\";\n\nimport * as React from \"react\";\n\nimport { Link, graphql, useStaticQuery } from \"gatsby\";\n\nimport { PostAuthors } from \"./PostAuthors\";\nimport { PostKeywords } from \"./PostKeywords\";\nimport { PostTimeToRead } from \"./PostTimeToRead\";\n\nimport { mapSlugToImageName } from \"../../../gatsby/helpers/mapSlugToImageName.mjs\";\n\ninterface Props {\n  as?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\n  link: string;\n  title: string;\n  datePublished: string;\n  datePublishedMeta: string;\n  dateModifiedMeta: string;\n  content: string;\n  keywords: string[];\n  language: string;\n  wordCount: number;\n  timeToRead: number;\n  authors?: string[];\n}\n\ninterface SiteQuery {\n  site: {\n    siteMetadata: {\n      siteUrl: string;\n    };\n  };\n}\n\nexport function PostExcerpt({\n  as = \"h2\",\n  link,\n  title,\n  datePublished,\n  datePublishedMeta,\n  dateModifiedMeta,\n  authors,\n  content,\n  language,\n  keywords,\n  wordCount,\n  timeToRead,\n}: Props) {\n  const data = useStaticQuery<SiteQuery>(graphql`\n    query {\n      site {\n        siteMetadata {\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  const siteUrl = data.site.siteMetadata.siteUrl;\n  const thumbnailUrl = `${siteUrl}/thumbnails/${mapSlugToImageName(link)}.png`;\n\n  const HeadingWrapper = (\n    props: React.DetailedHTMLProps<\n      React.HTMLAttributes<HTMLElement>,\n      HTMLElement\n    >,\n  ) => React.createElement(as, props);\n\n  return (\n    <article\n      itemScope\n      itemType=\"http://schema.org/Article\"\n      className={css.postExcerpt__wrapper}\n      lang={language}\n    >\n      <meta itemProp=\"image\" content={thumbnailUrl} />\n      <meta itemProp=\"dateModified\" content={dateModifiedMeta} />\n      <meta itemProp=\"wordCount\" content={`${wordCount}`} />\n\n      <header>\n        <p className={css.postExcerpt__info}>\n          <PostAuthors data={authors} className=\"visually-hidden\" />\n\n          <time dateTime={datePublishedMeta} itemProp=\"datePublished\">\n            {datePublished}\n          </time>\n\n          <span aria-hidden>{\" • \"}</span>\n          <PostTimeToRead value={timeToRead} />\n\n          <span aria-hidden>{\" • \"}</span>\n          <PostKeywords data={keywords} className={css.postExcerpt__keyword} />\n        </p>\n\n        <HeadingWrapper className={css.postExcerpt__title}>\n          <Link to={link} itemProp=\"url\" rel=\"bookmark\">\n            <span itemProp=\"headline\">{title}</span>\n          </Link>\n        </HeadingWrapper>\n      </header>\n\n      <p\n        dangerouslySetInnerHTML={{ __html: content }}\n        itemProp=\"description\"\n        className={css.postExcerpt__content}\n      />\n    </article>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var game__card = \"index-module--game__card--cae3f\";\nexport var game__description = \"index-module--game__description--292ee\";\nexport var game__link = \"index-module--game__link--57e75\";\nexport var game__name = \"index-module--game__name--7478d\";\nexport var game__wrapper = \"index-module--game__wrapper--b9a88\";","import * as css from \"./index.module.scss\";\n\nimport * as React from \"react\";\n\ninterface Props {\n  as?: string | React.ComponentType<unknown>;\n  link: string;\n  name: string;\n  icon: string;\n  color: string;\n  textColor: string;\n  description: string;\n}\n\nexport function GameCard({\n  link,\n  name,\n  description,\n  icon,\n  color,\n  textColor,\n  as = \"article\",\n}: Props) {\n  const Wrapper = (\n    props: React.DetailedHTMLProps<\n      React.HTMLAttributes<HTMLElement>,\n      HTMLElement\n    >,\n  ) => React.createElement(as, props);\n\n  return (\n    <Wrapper className={css.game__wrapper}>\n      <a className={css.game__link} href={link}>\n        <figure\n          className={css.game__card}\n          style={{\n            color: textColor,\n            backgroundColor: color,\n            boxShadow: `\n              0 6px 20px -10px ${color},\n              0 0px 8px -2px rgba(0, 0, 0, 0.25)\n            `,\n          }}\n        >\n          <picture>\n            <img\n              alt={`Icon image for ${name} game`}\n              src={icon}\n              width={380}\n              height={380}\n              loading=\"lazy\"\n            />\n          </picture>\n\n          <figcaption>\n            <h4 className={css.game__name}>{name}</h4>\n            <p className={css.game__description}>{description}</p>\n          </figcaption>\n        </figure>\n      </a>\n    </Wrapper>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var heading__text = \"index-module--heading__text--edf62\";\nexport var heading__textH2 = \"index-module--heading__text--h2--dfb47\";\nexport var heading__textH3 = \"index-module--heading__text--h3--b2805\";\nexport var heading__wrapper = \"index-module--heading__wrapper--32832\";","import * as css from \"./index.module.scss\";\n\nimport * as React from \"react\";\n\ntype HeaderProps = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLElement>,\n  HTMLElement\n>;\n\ntype HeadingProps = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLHeadingElement>,\n  HTMLHeadingElement\n>;\n\nexport function Heading({\n  children,\n  ...props\n}: React.PropsWithChildren<HeaderProps>) {\n  return (\n    <header className={css.heading__wrapper} {...props}>\n      {children}\n    </header>\n  );\n}\n\nHeading.H1 = function H1({\n  children,\n  ...props\n}: React.PropsWithChildren<HeadingProps>) {\n  return (\n    <h1 className={`${css.heading__text}`} {...props}>\n      {children}\n    </h1>\n  );\n};\n\nHeading.H2 = function H2({\n  children,\n  ...props\n}: React.PropsWithChildren<HeadingProps>) {\n  return (\n    <h2 className={`${css.heading__text} ${css.heading__textH2}`} {...props}>\n      {children}\n    </h2>\n  );\n};\n\nHeading.H3 = function H3({\n  children,\n  ...props\n}: React.PropsWithChildren<HeadingProps>) {\n  return (\n    <h3 className={`${css.heading__text} ${css.heading__textH3}`} {...props}>\n      {children}\n    </h3>\n  );\n};\n\nHeading.H4 = function H4({\n  children,\n  ...props\n}: React.PropsWithChildren<HeadingProps>) {\n  return (\n    <h4 className={`${css.heading__text}`} {...props}>\n      {children}\n    </h4>\n  );\n};\n\nHeading.H5 = function H5({\n  children,\n  ...props\n}: React.PropsWithChildren<HeadingProps>) {\n  return (\n    <h5 className={`${css.heading__text}`} {...props}>\n      {children}\n    </h5>\n  );\n};\n\nHeading.H6 = function H6({\n  children,\n  ...props\n}: React.PropsWithChildren<HeadingProps>) {\n  return (\n    <h6 className={`${css.heading__text}`} {...props}>\n      {children}\n    </h6>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var hero = \"index-module--hero--5efce\";\nexport var hero__subtitle = \"index-module--hero__subtitle--cda69\";\nexport var hero__title = \"index-module--hero__title--dcec7\";\nexport var hero__wrapper = \"index-module--hero__wrapper--1a248\";","import * as css from \"./index.module.scss\";\n\nexport function calculateAge(birthday: Date) {\n  const ageDiff = Date.now() - birthday.getTime();\n  const ageDate = new Date(ageDiff);\n\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\n}\n\nexport function Hero() {\n  const age = calculateAge(new Date(\"01/01/1998\"));\n\n  return (\n    <article className={css.hero}>\n      <div className={css.hero__wrapper}>\n        <header>\n          <h1 className={css.hero__title}>\n            Bartosz\n            <br /> Łaniewski\n          </h1>\n\n          <h2 className={css.hero__subtitle}>\n            Developer & Designer<span>, {age} years old,</span> from Poland\n          </h2>\n        </header>\n      </div>\n    </article>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var repository__description = \"index-module--repository__description--19a70\";\nexport var repository__link = \"index-module--repository__link--824f1\";\nexport var repository__name = \"index-module--repository__name--d1764\";","import * as css from \"./index.module.scss\";\n\nimport * as React from \"react\";\n\nimport { Keyword } from \"../Keyword\";\n\ninterface Props {\n  as?: string | React.ComponentType<unknown>;\n  link: string;\n  name: string;\n  description: string;\n  keywords: string[];\n}\n\nexport function Repository({\n  link,\n  name,\n  description,\n  keywords,\n  as = \"article\",\n}: Props) {\n  const Wrapper = (\n    props: React.DetailedHTMLProps<\n      React.HTMLAttributes<HTMLElement>,\n      HTMLElement\n    >,\n  ) => React.createElement(as, props);\n\n  return (\n    <Wrapper\n      data-repo-name={name}\n      itemType=\"http://schema.org/SoftwareSourceCode\"\n      itemScope\n    >\n      <link itemProp=\"codeRepository\" href={link} />\n      <link itemProp=\"downloadUrl\" href={`${link}/releases`} />\n\n      <a\n        className={css.repository__link}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={link}\n      >\n        <h4 className={css.repository__name} itemProp=\"name\">\n          {name}\n        </h4>\n\n        <p className={css.repository__description} itemProp=\"about\">\n          {description}\n        </p>\n\n        <aside itemProp=\"keywords\">\n          {keywords.map((keyword) => (\n            <Keyword key={keyword}>{keyword}</Keyword>\n          ))}\n        </aside>\n      </a>\n    </Wrapper>\n  );\n}\n","import \"../styles/pages/index.scss\";\n\nimport { HeadProps, PageProps, graphql } from \"gatsby\";\n\nimport { Content } from \"../components/Content\";\nimport { GameCard } from \"../components/GameCard\";\nimport { Heading } from \"../components/Heading\";\nimport { Hero } from \"../components/Hero\";\nimport { Layout } from \"../components/Layout\";\nimport { PostExcerpt } from \"../components/PostExcerpt\";\nimport { Repository } from \"../components/Repository\";\nimport { SEO } from \"../components/SEO\";\n\ninterface DataType {\n  site: {\n    siteMetadata: {\n      siteUrl: string;\n    };\n  };\n  allMdx: {\n    nodes: Array<{\n      excerpt: string;\n      fields: {\n        slug: string;\n        timeToRead: {\n          minutes: number;\n          words: number;\n        };\n      };\n      frontmatter: {\n        title: string;\n        authors: string[];\n        language: string;\n        keywords: string[];\n        description: string;\n        dateCreated: string;\n        dateCreatedMeta: string;\n        dateUpdated: string;\n        dateUpdatedMeta: string;\n        datePublished: string;\n        datePublishedMeta: string;\n      };\n    }>;\n  };\n  allRepositoriesYaml: {\n    nodes: Array<{\n      id: string;\n      name: string;\n      desc: string;\n      path: string;\n      keywords: Array<string>;\n    }>;\n  };\n  allGamesYaml: {\n    nodes: Array<{\n      id: string;\n      name: string;\n      desc: string;\n      path: string;\n      icon: string;\n      color: string;\n      textColor: string;\n    }>;\n  };\n}\n\nexport default function IndexPage({ data }: PageProps<DataType>) {\n  const posts = data.allMdx.nodes;\n  const games = data.allGamesYaml.nodes;\n  const repositories = data.allRepositoriesYaml.nodes;\n\n  return (\n    <Layout>\n      <Hero />\n\n      <Content>\n        <article>\n          <Heading>\n            <Heading.H2>Newest articles</Heading.H2>\n            <Heading.H3>\n              I write articles about web development, mostly React, Vue, best\n              practices, accessibility and JS related stuff.\n            </Heading.H3>\n          </Heading>\n\n          <ol className=\"list\">\n            {posts.map((post) => (\n              <li key={post.fields.slug}>\n                <PostExcerpt\n                  as=\"h3\"\n                  link={post.fields.slug}\n                  wordCount={post.fields.timeToRead.words}\n                  timeToRead={post.fields.timeToRead.minutes}\n                  title={post.frontmatter.title}\n                  datePublished={post.frontmatter.datePublished}\n                  datePublishedMeta={post.frontmatter.datePublishedMeta}\n                  dateModifiedMeta={post.frontmatter.dateUpdatedMeta}\n                  authors={post.frontmatter.authors}\n                  content={post.frontmatter.description || post.excerpt}\n                  language={post.frontmatter.language}\n                  keywords={post.frontmatter.keywords}\n                />\n              </li>\n            ))}\n          </ol>\n        </article>\n      </Content>\n\n      <article>\n        <Heading>\n          <Heading.H2>Hand-crafted games</Heading.H2>\n          <Heading.H3>\n            I create mobile games from scratch! I learn most by experimenting\n            and game development makes me experiment a lot!\n          </Heading.H3>\n        </Heading>\n\n        <ol className=\"games list\">\n          {games.map((repository) => (\n            <GameCard\n              as=\"li\"\n              key={repository.id}\n              link={repository.path}\n              name={repository.name}\n              icon={repository.icon}\n              color={repository.color}\n              textColor={repository.textColor}\n              description={repository.desc}\n            />\n          ))}\n        </ol>\n      </article>\n\n      <Content>\n        <article>\n          <Heading>\n            <Heading.H2>Open-source projects</Heading.H2>\n            <Heading.H3>\n              Community is essential to me. I want to become the kind of\n              developer that I would want to work with. That is why I share my\n              knowledge, code, and time with others.\n            </Heading.H3>\n          </Heading>\n\n          <ol className=\"repositories list\">\n            {repositories.map((repository) => (\n              <Repository\n                as=\"li\"\n                key={repository.id}\n                link={repository.path}\n                name={repository.name}\n                description={repository.desc}\n                keywords={repository.keywords}\n              />\n            ))}\n          </ol>\n        </article>\n      </Content>\n    </Layout>\n  );\n}\n\nexport function Head({ data }: HeadProps<DataType>) {\n  const siteUrl = data.site.siteMetadata.siteUrl;\n\n  return (\n    <SEO\n      url={`${siteUrl}/`}\n      title=\"Bartosz Łaniewski\"\n      description=\"Creative designer & developer based in Poland. Passionate about architecture and beautiful software.\"\n    />\n  );\n}\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n    allMdx(limit: 5, sort: { frontmatter: { datePublished: DESC } }) {\n      nodes {\n        excerpt(pruneLength: 154)\n        fields {\n          slug\n          timeToRead {\n            minutes\n            words\n          }\n        }\n        frontmatter {\n          title\n          authors\n          language\n          keywords\n          description\n          dateCreated(formatString: \"MMMM DD, YYYY\")\n          dateCreatedMeta: dateCreated\n          dateUpdated(formatString: \"MMMM DD, YYYY\")\n          dateUpdatedMeta: dateUpdated\n          datePublished(formatString: \"MMMM DD, YYYY\")\n          datePublishedMeta: datePublished\n        }\n      }\n    }\n    allRepositoriesYaml {\n      nodes {\n        id\n        name\n        desc\n        path\n        keywords\n      }\n    }\n    allGamesYaml {\n      nodes {\n        id\n        name\n        desc\n        path\n        icon\n        color\n        textColor\n      }\n    }\n  }\n`;\n"],"names":["SPLIT_LOWER_UPPER_RE","SPLIT_UPPER_UPPER_RE","SPLIT_SEPARATE_NUMBER_RE","DEFAULT_STRIP_REGEXP","SPLIT_REPLACE_VALUE","DEFAULT_PREFIX_SUFFIX_CHARACTERS","split","value","result","trim","replace","start","end","length","charAt","slice","splitSeparateNumbers","words","i","word","match","exec","offset","index","splice","noCase","input","options","prefix","suffix","splitPrefixSuffix","map","lowerFactory","locale","join","delimiter","toLowerCase","toLocaleLowerCase","splitFn","separateNumbers","prefixCharacters","suffixCharacters","prefixIndex","suffixIndex","char","includes","mapKeywordToSlug","category","mapSlugToImageName","slug","keyword","keyword__outlined","keyword__wide","Keyword","_ref","children","outlined","wide","detailedHTMLProps","_jsx","className","css","title","PostAuthors","data","props","_jsxs","author","React","itemScope","itemProp","itemType","PostTimeToRead","timeToReadRounded","Math","ceil","timeToReadMeta","dateTime","postExcerpt__content","postExcerpt__info","postExcerpt__keyword","postExcerpt__title","postExcerpt__wrapper","PostKeywords","Link","to","PostExcerpt","as","link","datePublished","datePublishedMeta","dateModifiedMeta","authors","content","language","keywords","wordCount","timeToRead","thumbnailUrl","useStaticQuery","site","siteMetadata","siteUrl","HeadingWrapper","lang","rel","dangerouslySetInnerHTML","__html","game__card","game__description","game__link","game__name","game__wrapper","GameCard","name","description","icon","color","textColor","Wrapper","href","style","backgroundColor","boxShadow","alt","src","width","height","loading","heading__text","heading__wrapper","Heading","H1","_ref2","H2","_ref3","H3","_ref4","H4","_ref5","H5","_ref6","H6","_ref7","hero","hero__subtitle","hero__title","hero__wrapper","Hero","age","birthday","ageDiff","Date","now","getTime","ageDate","abs","getUTCFullYear","calculateAge","repository__description","repository__link","repository__name","Repository","target","IndexPage","posts","allMdx","nodes","games","allGamesYaml","repositories","allRepositoriesYaml","Layout","Content","post","fields","minutes","frontmatter","dateUpdatedMeta","excerpt","repository","path","desc","id","Head","SEO","url"],"sourceRoot":""}