{"version":3,"sources":["webpack://laniewski-me/./src/components/Content/index.tsx","webpack://laniewski-me/./src/components/PostExcerpt/index.tsx","webpack://laniewski-me/./src/pages/posts.tsx"],"names":["Content","children","id","className","itemProp","PostExcerpt","link","title","date","content","itemScope","itemType","dateTime","to","dangerouslySetInnerHTML","__html","PostsPage","posts","data","allMarkdownRemark","nodes","map","post","key","fields","slug","frontmatter","description","excerpt"],"mappings":"+JAIO,SAASA,EAAT,GAAiE,IAA9CC,EAA8C,EAA9CA,SACxB,OACE,wBAAMC,GAAG,UAAUC,UAAU,UAAUC,SAAS,qBAC7CH,K,0FCFA,SAASI,EAAT,GAAqD,IAA9BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC/C,OACE,2BACEC,WAAS,EACTC,SAAS,4BACTR,UAAU,yBAEV,8BACE,wBACEA,UAAU,qBACVS,SAAUJ,EACVJ,SAAS,iBAERI,GAGH,sBAAIL,UAAU,uBACZ,gBAAC,KAAD,CAAMU,GAAIP,EAAMF,SAAS,OACvB,wBAAMA,SAAS,YAAYG,MAKjC,qBACEO,wBAAyB,CAAEC,OAAQN,GACnCL,SAAS,cACTD,UAAU,6B,qIClBH,SAASa,EAAT,GAAoC,IAC3CC,EAD2C,EAAfC,KACfC,kBAAkBC,MAErC,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKb,MAAM,cAEX,gBAAC,IAAD,KACE,sBAAIJ,UAAU,QACXc,EAAMI,KAAI,SAACC,GAAD,OACT,sBAAIC,IAAKD,EAAKE,OAAOC,MACnB,gBAAC,IAAD,CACEnB,KAAMgB,EAAKE,OAAOC,KAClBlB,MAAOe,EAAKI,YAAYnB,OAASe,EAAKE,OAAOC,KAC7CjB,KAAMc,EAAKI,YAAYlB,KACvBC,QAASa,EAAKI,YAAYC,aAAeL,EAAKM","file":"component---src-pages-posts-tsx-025f76052328ecbb7bad.js","sourcesContent":["import \"./index.scss\";\n\nimport React from \"react\";\n\nexport function Content({ children }: React.PropsWithChildren<unknown>) {\n  return (\n    <main id=\"content\" className=\"content\" itemProp=\"mainContentOfPage\">\n      {children}\n    </main>\n  );\n}\n","import \"./index.scss\";\n\nimport React from \"react\";\nimport { Link } from \"gatsby\";\n\nexport function PostExcerpt({ link, title, date, content }) {\n  return (\n    <article\n      itemScope\n      itemType=\"http://schema.org/Article\"\n      className=\"post-excerpt__wrapper\"\n    >\n      <header>\n        <time\n          className=\"post-excerpt__date\"\n          dateTime={date}\n          itemProp=\"datePublished\"\n        >\n          {date}\n        </time>\n\n        <h2 className=\"post-excerpt__title\">\n          <Link to={link} itemProp=\"url\">\n            <span itemProp=\"headline\">{title}</span>\n          </Link>\n        </h2>\n      </header>\n\n      <p\n        dangerouslySetInnerHTML={{ __html: content }}\n        itemProp=\"description\"\n        className=\"post-excerpt__content\"\n      />\n    </article>\n  );\n}\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { PostsPageQuery } from \"../../graphql-types\";\n\nimport { Layout } from \"../components/Layout\";\nimport { SEO } from \"../components/SEO\";\nimport { PostExcerpt } from \"../components/PostExcerpt\";\nimport { Content } from \"../components/Content\";\n\ninterface Props {\n  data: PostsPageQuery;\n}\n\nexport default function PostsPage({ data }: Props) {\n  const posts = data.allMarkdownRemark.nodes;\n\n  return (\n    <Layout>\n      <SEO title=\"All posts\" />\n\n      <Content>\n        <ol className=\"list\">\n          {posts.map((post) => (\n            <li key={post.fields.slug}>\n              <PostExcerpt\n                link={post.fields.slug}\n                title={post.frontmatter.title || post.fields.slug}\n                date={post.frontmatter.date}\n                content={post.frontmatter.description || post.excerpt}\n              />\n            </li>\n          ))}\n        </ol>\n      </Content>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query PostsPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}