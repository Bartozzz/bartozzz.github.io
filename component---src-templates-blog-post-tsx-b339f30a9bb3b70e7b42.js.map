{"version":3,"sources":["webpack://laniewski-me/./src/components/Content/index.tsx","webpack://laniewski-me/./src/templates/blog-post.tsx"],"names":["Content","children","id","className","itemProp","BlogPostTemplate","post","data","markdownRemark","title","frontmatter","description","excerpt","itemScope","itemType","date","dangerouslySetInnerHTML","__html","html"],"mappings":"6JAIO,SAASA,EAAT,GAAiE,IAA9CC,EAA8C,EAA9CA,SACxB,OACE,wBAAMC,GAAG,UAAUC,UAAU,UAAUC,SAAS,qBAC7CH,K,oICEA,SAASI,EAAT,GAAoC,IACnCC,EADmC,EAARC,KACfC,eAElB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,UAGpD,gBAAC,IAAD,KACE,2BACET,UAAU,OACVU,WAAS,EACTC,SAAS,6BAET,0BAAQX,UAAU,gBAChB,sBAAIC,SAAS,YAAYE,EAAKI,YAAYD,OAC1C,yBAAIH,EAAKI,YAAYK,OAGvB,2BACEC,wBAAyB,CAAEC,OAAQX,EAAKY,MACxCd,SAAS,cACTD,UAAU,qBAqCtB","file":"component---src-templates-blog-post-tsx-b339f30a9bb3b70e7b42.js","sourcesContent":["import \"./index.scss\";\n\nimport React from \"react\";\n\nexport function Content({ children }: React.PropsWithChildren<unknown>) {\n  return (\n    <main id=\"content\" className=\"content\" itemProp=\"mainContentOfPage\">\n      {children}\n    </main>\n  );\n}\n","import \"./blog-post.scss\";\n\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport { Layout } from \"../components/Layout\";\nimport { SEO } from \"../components/SEO\";\nimport { Content } from \"../components/Content\";\n\nexport function BlogPostTemplate({ data }) {\n  const post = data.markdownRemark;\n\n  return (\n    <Layout>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n\n      <Content>\n        <article\n          className=\"post\"\n          itemScope\n          itemType=\"http://schema.org/Article\"\n        >\n          <header className=\"post__header\">\n            <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n            <p>{post.frontmatter.date}</p>\n          </header>\n\n          <section\n            dangerouslySetInnerHTML={{ __html: post.html }}\n            itemProp=\"articleBody\"\n            className=\"post__content\"\n          />\n        </article>\n\n        {/*\n        <nav className=\"blog-post-nav\">\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n        */}\n      </Content>\n    </Layout>\n  );\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}