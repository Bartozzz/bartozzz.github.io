{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-content-blog-2019-01-05-creating-offline-first-vue-apps-index-md-d34d0a8c3a3aea81f90b.js","mappings":"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","sources":["webpack://laniewski-me/./gatsby/helpers/mapSlugToImageName.mjs","webpack://laniewski-me/./src/templates/blog-post.tsx","webpack://laniewski-me/./src/components/Alert/index.module.scss","webpack://laniewski-me/./src/components/Alert/index.tsx","webpack://laniewski-me/./src/components/Discussion/index.tsx","webpack://laniewski-me/./src/components/TableOfContents/index.module.scss","webpack://laniewski-me/./src/components/TableOfContents/index.tsx","webpack://laniewski-me/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["export function mapSlugToImageName(slug) {\n  return slug.replace(\"/blog/\", \"\").replace(/\\/$/, \"\").replace(\"/\", \"-\");\n}\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/bartozzz.github.io/bartozzz.github.io/content/blog/2019-01-05-creating-offline-first-vue-apps/index.md\";\nimport \"./blog-post.scss\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {mapSlugToImageName} from \"../../gatsby/helpers/mapSlugToImageName.mjs\";\nimport {Alert} from \"../components/Alert\";\nimport {Content} from \"../components/Content\";\nimport {Discussion} from \"../components/Discussion\";\nimport {Layout} from \"../components/Layout\";\nimport {SEO} from \"../components/SEO\";\nimport {TableOfContents} from \"../components/TableOfContents\";\nimport {jsx as _jsx} from \"react/jsx-runtime\";\nimport {Fragment as _Fragment} from \"react/jsx-runtime\";\nimport {jsxs as _jsxs} from \"react/jsx-runtime\";\nfunction BlogPostTemplate(_ref) {\n  let {data, pageContext, children} = _ref;\n  const post = pageContext.data;\n  const slug = post.fields.slug;\n  const {frontmatter, tableOfContents} = post;\n  const {title, language, authors, datePublished, datePublishedMeta, dateUpdated, dateUpdatedMeta} = frontmatter;\n  const siteUrl = data.site.siteMetadata.siteUrl;\n  const thumbnailUrl = `${siteUrl}/thumbnails/${mapSlugToImageName(slug)}.png`;\n  return _jsx(Layout, {\n    children: _jsx(Content, {\n      children: _jsxs(\"article\", {\n        className: \"post\",\n        itemScope: true,\n        itemType: \"http://schema.org/Article\",\n        lang: language,\n        children: [_jsx(\"meta\", {\n          itemProp: \"image\",\n          content: thumbnailUrl\n        }), _jsx(\"meta\", {\n          itemProp: \"dateModified\",\n          content: dateUpdatedMeta\n        }), _jsxs(\"header\", {\n          className: \"post__header\",\n          children: [_jsx(\"h1\", {\n            itemProp: \"headline\",\n            children: title\n          }), _jsxs(\"p\", {\n            className: \"post__header--metadata\",\n            children: [\"By\", \" \", authors.map((author, index) => _jsxs(_Fragment, {\n              children: [_jsx(\"span\", {\n                itemScope: true,\n                itemProp: \"author\",\n                itemType: \"https://schema.org/Person\",\n                children: _jsx(\"span\", {\n                  itemProp: \"name\",\n                  children: author\n                })\n              }, author), index < authors.length - 1 ? \" and \" : \"\"]\n            })), \" \", \"on\", \" \", _jsx(\"time\", {\n              dateTime: datePublishedMeta,\n              itemProp: \"datePublished\",\n              title: `Last modified on ${dateUpdated}`,\n              children: datePublished\n            })]\n          })]\n        }), _jsxs(\"div\", {\n          className: \"post__wrapper\",\n          children: [tableOfContents.items ? _jsx(\"div\", {\n            className: \"post__toc\",\n            children: _jsx(TableOfContents, {\n              data: tableOfContents\n            })\n          }) : null, _jsxs(\"div\", {\n            className: \"post__content\",\n            children: [_jsx(\"div\", {\n              itemProp: \"articleBody\",\n              children: _jsx(MDXProvider, {\n                components: {\n                  Alert\n                },\n                children: children\n              })\n            }), _jsx(Discussion, {\n              lang: language\n            })]\n          })]\n        })]\n      })\n    })\n  });\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport function Head(_ref2) {\n  let {data, pageContext} = _ref2;\n  const post = pageContext.data;\n  const slug = post.fields.slug;\n  const {excerpt} = post;\n  const {title, description} = post.frontmatter;\n  const siteUrl = data.site.siteMetadata.siteUrl;\n  const thumbnailUrl = `${siteUrl}/thumbnails/${mapSlugToImageName(slug)}.png`;\n  return _jsx(SEO, {\n    url: `${siteUrl}${slug}`,\n    title: title,\n    image: thumbnailUrl,\n    description: description || excerpt,\n    children: _jsx(\"html\", {\n      className: \"smooth-scroll\"\n    })\n  });\n}\nconst query = \"698804963\";\n","// extracted by mini-css-extract-plugin\nexport var alert = \"index-module--alert--af406\";\nexport var alert__failure = \"index-module--alert__failure--c7bcc\";\nexport var alert__info = \"index-module--alert__info--cfa0f\";\nexport var alert__success = \"index-module--alert__success--14443\";\nexport var alert__warning = \"index-module--alert__warning--5ba8e\";","import * as css from \"./index.module.scss\";\n\nimport * as React from \"react\";\n\ninterface Props {\n  as?: string | React.ComponentType<unknown>;\n  type?: \"success\" | \"failure\" | \"warning\" | \"info\";\n}\n\nexport function Alert({\n  children,\n  as = \"aside\",\n  type = \"info\",\n  ...props\n}: React.PropsWithChildren<Props>) {\n  const Wrapper = (\n    props: React.DetailedHTMLProps<\n      React.HTMLAttributes<HTMLElement>,\n      HTMLElement\n    >,\n  ) => React.createElement(as, props);\n\n  return (\n    <Wrapper {...props} className={`${css.alert} ${css[`alert__${type}`]}`}>\n      {children}\n    </Wrapper>\n  );\n}\n","import \"./index.scss\";\n\nimport * as React from \"react\";\n\nimport { useTheme } from \"../../hooks/useTheme\";\n\nfunction sendGiscusMessage<T>(message: T) {\n  const iframe = document.querySelector<HTMLIFrameElement>(\n    \"iframe.giscus-frame\",\n  );\n\n  if (iframe) {\n    iframe.contentWindow.postMessage({ giscus: message }, \"https://giscus.app\");\n  }\n}\n\nfunction createGiscusTag({ theme, lang }: { theme: Theme; lang: string }) {\n  const origin = typeof window !== \"undefined\" ? window.location.origin : \"\";\n  const lightThemePath = `${origin}/discussion-light.css`;\n  const darkThemePath = `${origin}/discussion-dark.css`;\n  const initialTheme = theme === \"dark\" ? darkThemePath : lightThemePath;\n\n  return `\n    <script src=\"https://giscus.app/client.js\"\n      data-repo=\"Bartozzz/bartozzz.github.io\"\n      data-repo-id=\"MDEwOlJlcG9zaXRvcnkyNDk1MjY5MQ==\"\n      data-category=\"Discussion\"\n      data-category-id=\"DIC_kwDOAXy_c84CAHzq\"\n      data-mapping=\"pathname\"\n      data-reactions-enabled=\"1\"\n      data-emit-metadata=\"0\"\n      data-theme=\"${initialTheme}\"\n      data-lang=\"${lang}\"\n      crossorigin=\"anonymous\"\n      async>\n    </script>\n  `;\n}\n\nexport function Discussion({ lang = \"en\" }: { lang?: string }) {\n  const divRef = React.useRef<HTMLDivElement>();\n  const [theme] = useTheme();\n  const hasTheme = theme !== null;\n\n  React.useLayoutEffect(() => {\n    const div = divRef.current;\n\n    if (!div || !hasTheme) {\n      return;\n    }\n\n    const scriptTag = createGiscusTag({ theme, lang });\n    const slotHtml = document.createRange().createContextualFragment(scriptTag);\n\n    div?.appendChild(slotHtml);\n\n    return () => {\n      div.innerHTML = \"\";\n    };\n  }, [hasTheme]);\n\n  React.useEffect(() => {\n    const origin = typeof window !== \"undefined\" ? window.location.origin : \"\";\n    const lightThemePath = `${origin}/discussion-light.css`;\n    const darkThemePath = `${origin}/discussion-dark.css`;\n    const newTheme = theme === \"dark\" ? darkThemePath : lightThemePath;\n\n    sendGiscusMessage({\n      setConfig: {\n        theme: newTheme,\n        lang,\n      },\n    });\n  }, [theme, lang]);\n\n  return (\n    <>\n      <div className={`comments--${theme}`} ref={divRef}></div>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var toc = \"index-module--toc--16eb9\";\nexport var toc__ellipsis = \"index-module--toc__ellipsis--2a1a1\";\nexport var toc__link = \"index-module--toc__link--1571c\";\nexport var toc__linkActive = \"index-module--toc__link--active--2b793\";\nexport var toc__list = \"index-module--toc__list--19652\";\nexport var toc__title = \"index-module--toc__title--91e5c\";","import * as css from \"./index.module.scss\";\n\nimport * as React from \"react\";\n\nimport { Link } from \"gatsby\";\n\nimport {\n  TableOfContents as TTableOfContents,\n  TableOfContentItem,\n} from \"../../../gatsby/types/queries\";\n\ninterface Props {\n  data: TTableOfContents;\n}\n\nfunction flattenTableOfContents(\n  input: TableOfContentItem[],\n): TableOfContentItem[] {\n  return input.flatMap(({ url, title, items }) => [\n    { url, title },\n    ...(items ? flattenTableOfContents(items) : []),\n  ]);\n}\n\nexport function TableOfContents({ data }: Props) {\n  const [activeHeadingId, setActiveHeadingId] = React.useState<string>();\n  const headingsIDs = flattenTableOfContents(data.items);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setActiveHeadingId(`#${entry.target.id}`);\n          }\n        });\n      },\n      { rootMargin: `0% 0% -80% 0%` },\n    );\n\n    headingsIDs.forEach((item) => {\n      const element = document.querySelector(item.url);\n\n      if (element) {\n        observer.observe(element);\n      }\n    });\n\n    return () => {\n      headingsIDs.forEach((item) => {\n        const element = document.querySelector(item.url);\n\n        if (element) {\n          observer.unobserve(element);\n        }\n      });\n    };\n  }, [headingsIDs]);\n\n  return (\n    <nav aria-label=\"On this page\" className={css.toc}>\n      <p className={css.toc__title}>Contents</p>\n      <TableOfContentsList tree={data} activeSlug={activeHeadingId} />\n    </nav>\n  );\n}\n\nexport function TableOfContentsList({\n  tree,\n  activeSlug,\n}: {\n  tree: TTableOfContents;\n  activeSlug: string;\n}) {\n  return (\n    <ol className={css.toc__list}>\n      {tree.items.map((heading) => (\n        <li key={heading.url}>\n          <Link\n            to={heading.url}\n            title={heading.title}\n            className={`${css.toc__link} ${\n              activeSlug === heading.url ? css.toc__linkActive : \"\"\n            }`}\n          >\n            <span className={css.toc__ellipsis}>{heading.title}</span>\n          </Link>\n\n          {heading.items?.length > 0 && (\n            <TableOfContentsList tree={heading} activeSlug={activeSlug} />\n          )}\n        </li>\n      ))}\n    </ol>\n  );\n}\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} props\n *   Props.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(props) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (props.disableParentContext) {\n    allComponents =\n      typeof props.components === 'function'\n        ? props.components(emptyComponents)\n        : props.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(props.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    props.children\n  )\n}\n"],"names":["mapSlugToImageName","slug","replace","BlogPostTemplate","_ref","data","pageContext","children","post","fields","frontmatter","tableOfContents","title","language","authors","datePublished","datePublishedMeta","dateUpdated","dateUpdatedMeta","thumbnailUrl","site","siteMetadata","siteUrl","_jsx","Layout","Content","_jsxs","className","itemScope","itemType","lang","itemProp","content","map","author","index","_Fragment","length","dateTime","items","TableOfContents","MDXProvider","components","Alert","Discussion","GatsbyMDXWrapper","props","React","GATSBY_COMPILED_MDX","Head","_ref2","excerpt","description","SEO","url","image","alert__failure","alert__info","alert__success","alert__warning","as","type","Wrapper","css","divRef","theme","useTheme","hasTheme","div","current","scriptTag","origin","window","location","createGiscusTag","slotHtml","document","createRange","createContextualFragment","appendChild","innerHTML","message","iframe","querySelector","contentWindow","postMessage","giscus","sendGiscusMessage","setConfig","ref","toc","toc__ellipsis","toc__link","toc__linkActive","toc__list","toc__title","flattenTableOfContents","input","flatMap","concat","_toConsumableArray","activeHeadingId","setActiveHeadingId","headingsIDs","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","id","rootMargin","item","element","observe","unobserve","TableOfContentsList","tree","activeSlug","_ref3","heading","_heading$items","Link","to","emptyComponents","MDXContext","useMDXComponents","contextComponents","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}